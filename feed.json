[{"title":"Synapses, a biological perspective","permalink":"//bio_synapse.html","link":"//bio_synapse.html","date":"2019-07-08T00:00:00-07:00","modified":"2019-07-24T17:04:32-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<style type=\"text/css\">\ncode.has-jax {font: inherit; font-size: 90%; background: inherit; border: inherit; width: 55%}\n</style>\n\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n    tex2jax: {\n        inlineMath: [['$','$'], ['\\\\(','\\\\)']],\n        skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'] // removed 'code' entry\n    },\n    styles: {\n        \".MathJax_Display\": {\n            \"width\": \"55%!important\"\n        }\n    }\n});\nMathJax.Hub.Queue(function() {\n    var all = MathJax.Hub.getAllJax(), i;\n    for(i = 0; i < all.length; i += 1) {\n        all[i].SourceElement().parentNode.className += ' has-jax';\n    }\n});\n</script>\n\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=TeX-AMS_HTML-full\"></script>\n\n<p>In a purely graphical interpretation of neural networks, nodes represent artificial neurons and edges represent artificial synapses. These artificial synapses have a biological counterpart—complex chemical junctions which propagate electrical activity between spiking neurons—but are usually abstracted into scalar weights. Is this description enough? Or have we missed functionally-relevent characteristics of biological synapses?</p>\n\n<p>In this post, I dive into a study of chemical synapses, starting from the biology: what are they, physically, and how do they propagate neural activity? After understanding all the major players acting within the synapse, I ask how the dynamics of neural activity alters their behavior, giving rise to synaptic plasticity. Finally, I return to a motivating question: when can synapses be modeled as weights?</p>\n\n<h3 id=\"pictures-and-terms\">Pictures and terms</h3>\n<p>Before jumping into how synapses work, I’ll lay out some key terms that are essential for understanding what a synapse really is. Of course, no discussion here would be complete without illustrations.</p>\n\n<figure>\n<label for=\"highlevel-synapse \" class=\"margin-toggle\">⊕</label><input type=\"checkbox\" id=\"highlevel-synapse \" class=\"margin-toggle\" /><span class=\"marginnote\">\n<em>Fig. 1:</em> High-level depiction of an axodendritic synapse <em>(left)</em> and zoomed into a single synapse <em>(right)</em>.\n</span>\n<img src=\"/assets/img/synapse-img.png\" alt=\"highlevel-synapse\" />\n</figure>\n\n<!-- ![\"highlevel-synapse\"](/assets/img/synapse-img.png)\n*Fig. 1: High-level depiction of an axodendritic synapse (left) and zoomed into a single synapse (right)* -->\n\n<p>At the most basic level, an <strong>axodendritic synapse</strong>, as depicted in Fig. 1, is the juncture at which an action potential flowing along the presynaptic <strong>axon</strong> is signaled to the postsynaptic <strong>dendrite</strong>.<label for=\"axosomatic-note \" class=\"margin-toggle sidenote-number\"></label><input type=\"checkbox\" id=\"axosomatic-note \" class=\"margin-toggle\" /><span class=\"sidenote\">Synapses in the brain may also form on a soma or axon, labeled as axosomatic or axoaxonic synapses. I only consider axodendritic synapses here, and thus refer to them without the axodendritic qualifier.</span> At the site of the synapse, the presynaptic axon terminates at an <strong>axon terminal</strong>. Across a ~20nm physical gap called the <strong>synaptic cleft</strong>, the postsynaptic dendrite grows a <strong>spine</strong>—a short protrusion with a narrow neck and bulbous head. A single dendritic branch may develop dozens of dendritic spines, giving its neuron hundreds or thousands of different input sources. Furthermore, these input sources are able to act independently: segments of a dendritic branch contain their own protein synthesis machinery for local control of postsynaptic composition at the site of individual synapses.</p>\n\n<p>Critical to the function of a synapse are <strong>ions</strong>, which are dissolved in the extracellular fluid, and <strong>neurotransmitters</strong>: chemicals synthesized within the axon terminal and released into the synaptic cleft for postsynaptic signaling. Of the many ions present in the synaptic cleft, <strong>Ca<sup>2+</sup></strong> ions were found to be essential to neurotransmitter release.<label for=\"katz-nobel \" class=\"margin-toggle sidenote-number\"></label><input type=\"checkbox\" id=\"katz-nobel \" class=\"margin-toggle\" /><span class=\"sidenote\">This and other discoveries regarding chemical signaling in the synapse won Bernard Katz the Nobel Price in Medicine in 1970.</span> These ions are able to drift into the presynaptic axon terminal through <strong>voltage-gated Ca<sup>2+</sup> channels</strong> during action potentials. Within the axon terminal, neurotransmitters like <strong>glutamate</strong>, <strong>GABA</strong>, and <strong>dopamine</strong> are stored in <strong>vesicles</strong>, enabling efficient transport of discrete quanta of neurotransmitters. Some fraction of the total vesicles may be kept in reserve, while others are circulated and tethered at the <strong>active zone</strong> of the axon terminal, where they fuse with the terminal’s plasma membrane to release their neurotransmitters into the synaptic cleft. There the neurotransmitters begin the slow chemical diffusion to the postsynaptic dendritic spine.</p>\n\n<p>At the postsynaptic site, concentrated in a region called the <strong>postsynaptic density</strong>, a variety of <strong>ionotropic receptors</strong>—chemical structures composed of proteins—bind to specific neurotransmitters before opening their ion channels. Thus these receptors directly and rapidly influence their neuron’s conductivity to depolarizing or hyperpolarizing ions like Na<sup>+</sup>, K<sup>+</sup>, and Cl<sup>-</sup>, and generate mV-level deflections in the <strong>postsynaptic potential</strong> (PSP). Two receptors of particular interest in the context of learning are <strong>AMPA receptors</strong> (AMPARs) and <strong>NMDA receptors</strong> (NMDARs), which are both activated by the neurotransmitter glutamate. Both receptors gate channels for Na<sup>+</sup> ions, and when activated by glutamate, depolorize the dendrite with <strong>excitatory PSPs</strong> (EPSPs). Ionotropic GABA receptors play a similar role in altering the postsynaptic potential, and when activated by the GABA neurotransmitter, open Cl<sup>-</sup> channels that hyperpolarize the dendrite with <strong>inhibitory PSPs</strong> (IPSPs). In contrast, there also exist a secondary form of receptors called <strong>metabotropic receptors</strong>, which are indirectly linked with ion channels through <strong>secondary messengers</strong>—<em>intracellular</em> signaling molecules such as the switch-like G-proteins. These molecules initate signaling cascades which, among other phenomena, can open and close ion channels. Such receptors are much slower to activate and deactivate than their ionotropic counterparts, and can have more widespread effects in the neuron.</p>\n\n<p>An important chemical reaction throughout the many synaptic mechanisms is protein <strong>phosphorylation</strong>. In this reaction, phosphate-carrying enzymes called <strong>kinases</strong>, contribute their phosphate to the target protein and altering its interaction with other proteins. Kinases thus regulate signaling within neurons, and can have a variety of higher-order effects that go beyond propagating signals across synapses. For example, they can regulate the ratio of synaptic vesicles in the reserve pool to vesicles at the active zone, thus altering the synapse’s ability to  eject neurotransmitters from the presynaptic neuron. At the postsynaptic site, protein kinases are also involved in trafficking AMPA receptors to the postsynaptic density, thus altering the sensitivity of the postsynaptic neuron to presynaptic action potentials. Such higher-order effects are examples of <strong>synaptic plasticity</strong>, whereby electrical and biochemical phenomena alter the efficacy of interneuron communication.</p>\n<h3 id=\"synaptic-function-in-detail\">Synaptic function in detail</h3>\n<p>Having outlined all the major players involved in synaptic function, I can now explain their interactions in greater detail. The big picture function of a chemical synapse is the unidirectional communication of action potentials from a presynaptic neuron to a postsynaptic neuron.<label for=\"retrograde \" class=\"margin-toggle sidenote-number\"></label><input type=\"checkbox\" id=\"retrograde \" class=\"margin-toggle\" /><span class=\"sidenote\">This is not strictly true, as postsynaptic neurons can initiate retrograde signaling upon receiving neurotransmitters from the presynaptic neuron.</span> Nevertheless, these chemical synapses are in contrast to electrical synapses, also known as gap junctions, which enable rapid bidirectional communication between neurons at the expense of increased spatially-correlated neural activity.</p>\n\n<p>The primary procedure for signaling through chemical synapses is as follows:</p>\n<ol>\n  <li>\n    <p><strong>Presynaptic action potentials cause the release of neurotransmitters.</strong> The propagation of an action potential to the axon terminal opens voltage-gated Ca<sup>2+</sup> channels, allowing an influx of Ca<sup>2+</sup> into the presynaptic neuron. RIM proteins are responsible for clustering these calcium channels into the active zone, where vesicles containing neurotransmitters have been tethered by phosphorylated proteins called synapsins. Chemical reactions between SNARE proteins in the vesicle membrane and the inflowing Ca<sup>2+</sup> ions initiates vesicle fusion with the neuronal membrane, ejecting the neurotransmitters into the synaptic cleft. In contrast to this full fusion neurotransmitter release, which requires a lengthy vesicle renewal process, an alternative mechanism called “kiss-and-run” fusion has also been observed. Here, the vesicle opens and closes transiently, allowing first the partial ejection of its contents and then rapid reuse during future action potentials. Though the evidence for the relative abundance of full fusion events and kiss-and-run events is still debated, it is speculated that kiss-and-run fusion may be employed by neurons to conserve scarce vesicular resources.</p>\n  </li>\n  <li>\n    <p><strong>Neurotransmitter binding at the postsynaptic density alters the postsynaptic potential.</strong> After the released neurotransmitters have diffused across the synaptic cleft, they are transiently captured by ionotropic and metabotropic receptors. The ensuing changes which take place at the postsynaptic density depend heavily on the bound neurotransmitters. In response to glutamate, AMPARs temporarily open their ion channels to sodium and potassium ions which locally depolarize the neuron. NMDARs are also activated by glutamate, but are generally blocked by bound Mg<sup>2+</sup> ions, preventing ion flow. Once the postsynaptic site has depolarized, however, these ions are expelled by the electric gradient, relieving the block and opening the NMDAR ion channel to Na<sup>+</sup>, K<sup>+</sup>, and Ca<sup>2+</sup> ions. As a result of this additional requirement, NMDARs are often called <em>coincidence detectors</em>, allowing depolarization and calcium influx only when other inputs transiently depolarize the dendrite. Dopamine receptors are a class of metabotropic receptors which initiate the following signaling cascade: G-protein activation stimulates the production of cyclic AMP (cAMP), which then (a) increases intracellular calcium concentrations and (b) amplifies protein phosphorylation of AMPA and NMDA by protein kinase A (PKA), increasing the ionic currents through AMPARs and NMDARs.</p>\n  </li>\n</ol>\n\n<p>That’s pretty much the end of the story for signal propagation through chemical synapses. Through a spatial summation and temporal convolution of excitatory and inhibitory postsynaptic potentials, a postsynaptic neuron may continue to initiate its own action potential. Next up, I’ll take a look at how the temporal patterns of presynaptic activity give rise to temporal variation in synaptic strengths.</p>\n\n<h3 id=\"mechanisms-of-synaptic-plasticity\">Mechanisms of synaptic plasticity</h3>\n<p>Synaptic plasticity is the ability to alter the efficacy of interneuron communication, posed as the strengthening or weakening of the effective synaptic weight. The governing mechanisms can be roughly classified by a variety of means, including the time scales on which they operate and the specificity of the affected synapses. While there is undoubtedly a spectrum over both of these classes, the former gives rise to a division between <strong>short-term plasticity</strong>, which alters synaptic weight over milliseconds to minutes, and <strong>long-term plasticity</strong>, which alters weights over hours to days. The latter class divides plasticity into <strong>homosynaptic plasticity</strong>, which is input-specfic and alters the weights associated with active presynaptic neurons, and <strong>heterosynaptic plasticity</strong>, which is not input-specific and allows presynaptic neural activity to alter the weights associated with other unactivated neurons. In this section, I will mostly discuss homosynaptic plasticity since these mechanisms are associative and primarily used in learning and memory.</p>\n\n<h5 id=\"short-term-plasticity\">Short-term plasticity</h5>\n<p>This brand of plasticity can be further classified into synaptic enhancement and synaptic depression, synonymous with a short-term strengthening or weakening of the synaptic weight.</p>\n\n<figure>\n<label for=\"short-term-plasticity \" class=\"margin-toggle\">⊕</label><input type=\"checkbox\" id=\"short-term-plasticity \" class=\"margin-toggle\" /><span class=\"marginnote\">\n<em>Fig. 2:</em> Example PSPs from paired-pulse facilitation <em>(left)</em> and post-tetanic potentiation <em>(right)</em>.\n</span>\n<img src=\"/assets/img/short-term-image.png\" alt=\"short-term-plasticity\" />\n</figure>\n\n<p><strong>Enhancement.</strong> Paired-pulse facilitation (PPF) is the phenomenon in which PSPs evoked by a presynaptic action potential are increased in magnitude when closely following a prior presynaptic action potential. This occurs when the rate of action potentials exceeds the rate at which inflowing Ca<sup>2+</sup> ions diffuse outwards, causing an accumulation of calcium concentration. As a result, the probability of vesicle fusion with the axonal membrane increases, enabling a larger ejection of neurotransmitters into the synaptic cleft. In computational theories, PPF is modeled by a time-varying probability $p(t)$, which jumps by some rate $\\alpha$ per action potential, saturates at a maximum value of 1, and decays with a time constant $\\tau_f$ to a a baseline proability $p_0$.</p>\n\n<script type=\"math/tex; mode=display\">\\frac{dp(t)}{dt} = \\frac{p_0-p(t)}{\\tau_f} + \\sum_j \\delta(t-t_j) \\cdot \\alpha \\cdot (1-p(t))</script>\n\n<p>This phenomenological model has non-trivial consequences for synaptic function. Since an increasing probability during high-frequency stimulation corresponds to a near-lossless interneuron communication, PPF acts as a high-pass filter on neural activity, propagating high-frequency signals with greater magnitude in comparison to low-frequency signals.</p>\n\n<p>PPF operates on the shortest time scale of all known mechanisms for short-term homosynaptic plasticity, governed by the milliseconds diffusion rate of the calcium ions. Other forms of enhancement operate on longer time scales, such as post-tetanic potentiation (PTP), which persists for tens of seconds to minutes. PTP is observed following <em>sustained</em> high-frequency stimulation, also known as a tetanus. Intracellular calcium ions continue to play a central role in mediating PTP, but also utilize biochemical signaling cascades for slower kinetics.</p>\n\n<p><strong>Depression.</strong> Short-term depression, also known as synaptic fatigue, primarily arises from vesicle depletion. Vesicles are typically maintained in three distinct pools: the readily releasable pool (about 5% of total vesicles), the recycling pool (about 15%) and the reserve pool (the remaining 80%). A process of endocytosis reforms vesicles from the axonal membrane following full fusion, though this process can take several seconds. The fraction of vesicles ever released from the reserve pool is a debated figure, but the inevitable limitation results in fewer and fewer vesicles mobilized for fusion during sustained activity at $&gt;1$ Hz. Like PPF, this mechanism is modeled with $n(t)$ for the time-varying occupancy of the release pool (normalized between 0 and 1). Assuming each action potential releases vesicles with probability $p$ per unit time, and the $n(t)$ regenerates to 1 with time constant $\\tau_d$, the model takes the following form:</p>\n\n<script type=\"math/tex; mode=display\">\\frac{dn(t)}{dt} = \\frac{1-n(t)}{\\tau_d} - \\sum_j \\delta(t-t_j) \\cdot p \\cdot n(t)</script>\n\n<p>This model for vesicle depletion, in contrast to paired pulse facilitation, describes a competing mechanism for short-term synaptic plasticity. In the presence of high-frequency presynaptic activity and assuming constant vesicle release probability $p$, vesicles rapidly deplete, effectively cutting off communication across the synapse. Relative to this state, low-frequency activity is propagated with a higher magnitude, thus acting as a low-pass filter. This analysis is only approximate, however, as the rate of vesicle depletion at time $t$ depends on the probability of vesicle release at time $t$, though they operate on different time scales. Despite this approximation, vesicle depletion does oppose the synaptic facilitation as a function of spike frequency, and the combination of both mechanisms endows synapses with potentially tuneable band-pass filtering mechanisms.</p>\n\n<p>But don’t just take my word for it, let’s see some simulations.</p>\n\n<p>The synapse-dependent hyperparameters I’ve toyed with here are the baseline vesicle release probability $p_0$, the rate of vesicles released during each action potential as a proportion of the full releasable pool $\\alpha$, and the time constant for facilitation $\\tau_f$ and for depletion $\\tau_d$. With those, I’ve measured the proportion of vesicles released (relative to the fully available set) in steady-state as the presynaptic spike frequency is varied, drawing out the frequency response for a synapse with the prescribed hyperparameters. The baseline values for these parameters were $p_0, \\alpha, \\tau_f, \\tau_d = (0.001, 0.75, 5ms, 2s)$.</p>\n\n<figure>\n<label for=\"short-term-tiered \" class=\"margin-toggle\">⊕</label><input type=\"checkbox\" id=\"short-term-tiered \" class=\"margin-toggle\" /><span class=\"marginnote\">\n<em>Fig. 3:</em> Simulation data of frequency-dependent short-term plasticity, incorporating both PPF and vesicle depletion. I've analyzed the baseline probability <em>(top-left)</em>, the incremental facilitation <em>(top-right)</em>, and time constants expressed in units of seconds <em>(bottom)</em>.\n</span>\n<img src=\"/assets/img/short_term_tiered.png\" alt=\"short-term-analysis\" />\n</figure>\n\n<p>A number of observations can be made from these results.</p>\n<ol>\n  <li>Bandpass filtering can only be seen for synapses with low levels of baseline vesicle release probability. Combined with a separate observation that larger synapses tend to have higher $p_0$, this result predicts bandpass filtering to be more pronounced in smaller synapses. When bandpass filtering is visible, the roll-off is approximately 8 dB/decade and 20 dB/decade in the lower and higher stopbands, respectively.</li>\n  <li>Higher rates of vesicle release during action potentials increase the relative gain of the synapse, likely due to its amplifying effect on synaptic facilitation.</li>\n  <li>As the ratio of time constants decreases, bandpass filtering becomes more pronounced. This is expected as the two processes, facilitation and depletion, begin to compete. As the ratio increases, the high-pass filtering of synaptic facilitation becomes more pronounced.</li>\n</ol>\n\n<h5 id=\"long-term-plasticity\">Long-term plasticity</h5>\n<p>Whereas mechanisms for short-term plasticity may be relatively consistent throughout the brain, long-term plasticity occurs according to a much wider diversity of mechanisms, both in different brain regions as well as over the course of development. Of particular interest in a study of learning and memory are the mechanisms within the hippocampus, which I’ll address here.</p>\n\n<figure>\n<label for=\"long-term-plasticity \" class=\"margin-toggle\">⊕</label><input type=\"checkbox\" id=\"long-term-plasticity \" class=\"margin-toggle\" /><span class=\"marginnote\">\n<em>Fig. 4:</em> Magnitude of PSPs following LTP induction <em>(left)</em> and LTD induction <em>(right)</em>.\n</span>\n<img src=\"/assets/img/long-term-plasticity.png\" alt=\"long-term-plasticity\" />\n</figure>\n\n<p><strong>Long-term Potentiation (LTP).</strong> An important mechanism for LTP induction in the hippocampus is NMDAR-dependent potentiation, observed in the Schaffer collatoral pathway between CA3 and CA1. NMDAR activation opens the postsynaptic neuron to calcium ions, initiating a number of secondary reactions. Ca<sup>2+</sup> ions cause the autophosphorylation of the protein kinase CaMKII, which binds to the PSD and phosphorylates the nearby AMPA receptors, increasing its channel conductance to depolarizing Na<sup>+</sup> ions.<label for=\"autophosphorylation \" class=\"margin-toggle sidenote-number\"></label><input type=\"checkbox\" id=\"autophosphorylation \" class=\"margin-toggle\" /><span class=\"sidenote\">The <em>auto</em>-phosphorylation is important for the bistability of CaMKII: once activated by Ca<sup>2+</sup>, it can replenish its phosphate groups (without requiring additional Ca<sup>2+</sup> ions) and continue phosphorylating AMPARs for extended periods of time.</span></p>\n\n<p>In addition to increasing the conductivity of the existing AMPARs, CaMKII also partakes in trafficking additional AMPARs from within the dendrite to the postsynaptic density, increasing the synapse’s propensity for depolarization. This process first involves the insertion of reserved AMPARs into the perisynaptic membrane, through the phosphorylation of SAP97 by CaMKII. A number of different proteins then play a role in moving and localizing the AMPA receptors into the PSD. The net result from these underlying reactions is the increased concentration of AMPARs in the synapse, increasing the magnitude of excitatory PSPs.</p>\n\n<p>Finally, the key component to long-term potentiation is the continued maintainence over hours, days, and weeks. This late-stage LTP requires both gene transciption and protein synthesis in the postsynaptic cell. Signaling cascades initiated by CaMKII can alter proteins which regulate the transciption of another protein kinase, PKM$\\zeta$, which is critical for the maintenance of LTP. Inhibition of this molecule in mice has been shown to erase spatial long-term memories, without affecting spatial short-term memories.<label for=\"sensorimotor \" class=\"margin-toggle sidenote-number\"></label><input type=\"checkbox\" id=\"sensorimotor \" class=\"margin-toggle\" /><span class=\"sidenote\">Interestingly, PKM$\\zeta$ also plays a role in rats’ sensorimotor cortices, where its inhibtion can erase muscle memories of a task.</span></p>\n\n<p><strong>Long-term Depression (LTD).</strong> Interestingly, like with LTP, LTD induction in the hippocampus is also driven by NMDAR-dependent calcium influx. Neurons must have some way to decide between potentiation or depression at the synapse, and the most accepted model determines this based on the level of depolarization at the postsynaptic neuron: above some threshold initiates potentiation, and below this threshold initiates depression. One possible explanation for this is the calcium-dependent activation of the phosphatase calcineurin, which has a higher affinity for calcium ions than CaMKII and is thus more likely to be initially activated by low-levels of intracellular calcium. This and another phosphatase, PP1, dephosphorylate target proteins and cause the internalization of synaptic AMPARs from the PSD back into the cell. As a result, the synapse becomes less sensitive to glutamate released by presynaptic neurons and responds with lower net magnitude PSPs. These phosphatases can have a more direct impact, by dephosphorylating the AMPARs. The receptors have a lower conductivity to depolarizing ions, further diminishing the PSPs induced by presynaptic activity.</p>\n\n<p>Ultimately, there is much to more learn about the mechanisms for long-term plasticity, especially given that the above mechanisms only describe plasticity in excitatory synapses onto CA1 of the hippocampus. Even just at the interface between the dentate gyrus and hippocampus, excitatory synapses between mossy fiber inputs and CA3 pyramidal cells show NMDAR-<em>independent</em> potentiation, signaling an entirely distinct set of mechanisms for plasticity. This diversity holds throughout the brain, including the prefrontal cortex, cerebellum, and striatum.</p>\n\n<p>But when has that ever stopped us theorists?</p>\n\n<h3 id=\"synapses-as-scalar-weights\">Synapses as scalar weights</h3>\n<p>What makes scalar weighting a good abstraction for synaptic function? Suppose I use the magnitude of each synapse’s postsynaptic potential to define that synapse’s weight. Assuming that PSP is consistent for every presynaptic spike, replacing each biological synapse with its scalar weight will induce the same pattern of postsynaptic activity, preserving the neural computation. The issue, of course, is that the PSP is <em>not</em> consistent for every spike, and its variation is heavily dependent on the temporal pattern of presynaptic activity (e.g., spike frequency), as I showed in the last section.</p>\n\n<p>This is not to completely write off the scalar weight abstraction used in modern AI. There, the ability to alter synaptic strengths based on the input is described by a learning/optimization algorithm, providing an artificial counterpart to the biological mechanisms of synaptic plasticity. Moreover, this has the advantage of building a theory of learning from a top-down perspective, rather than building bottom-up from phenomenological models of biological processes.</p>\n\n<p>At the same time, decoupling the mechanisms for signal propagation during inference and weight changes during training muddies our understanding of the continual learning problem. In the biological system, animals are streaming inputs and can rely on input-dependent synaptic plasticity to alter the neural computation and resulting behavior. In modern AI, typical solutions involve meta-training LSTMs over many different tasks, freezing their weights, and then relying on <em>only</em> the temporal dynamics of the recurrently connected neurons to perform the data-dependent behavioral adaption.<label for=\"lstms-meta-rl \" class=\"margin-toggle sidenote-number\"></label><input type=\"checkbox\" id=\"lstms-meta-rl \" class=\"margin-toggle\" /><span class=\"sidenote\">A good example of this is <a href=\"https://www.biorxiv.org/content/10.1101/295964v2\">Wang et. al. (2018) Prefrontal Cortex as a Meta-Reinforcement Learning System</a>.</span> Suppose I were to observe similar behavioral adaptation in an animal and in a trained LSTM, with the goal of using the neural dynamics of the artificial network to understand the neural computation of the animal. This approach would in fact be confounding two separate neural processes: the temporal dynamics of the neurons and the temporal dynamics of the synapses. If we were to instead endow synapses in the LSTM with data-dependent plasticity, we might be able to amortize the complicated computations the recurrent units are forced to compute with a set of more complex synapses. This could definitely be an interesting idea for new research in machine learning, tying in ideas from neuroscience.</p>\n\n<h3 id=\"references\">References</h3>\n\n<ol>\n  <li>Byrne, J. H. (ed.), <em>Neuroscience Online: An Electronic Textbook for the Neurosciences</em>. Accessed at <a href=\"http://nba.uth.tmc.edu/neuroscience/\">http://nba.uth.tmc.edu/neuroscience/</a>. Department of Neurobiology and Anatomy, McGovern Medical School at The University of Texas Health Science Center at Houston (UTHealth) © 1997, all rights reserved.</li>\n  <li>Südhof TC, Malenka RC. (2008) Understanding synapses: past, present, and future. <em>Neuron.</em> <strong>60(3)</strong>:469–476. <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3243741/\">doi:10.1016/j.neuron.2008.10.011</a></li>\n  <li>Hennig, M. H. (2013) Theoretical models of synaptic short term plasticity. <em>Front. Comput. Neurosci.</em> <strong>7</strong>:45. <a href=\"https://www.frontiersin.org/articles/10.3389/fncom.2013.00045/full\">doi:10.3389/fncom.2013.00045</a></li>\n  <li>Ho, V. M., Lee, J. A., &amp; Martin, K. C. (2011). The cell biology of synaptic plasticity. <em>Science</em>, <strong>334(6056)</strong>:623–628. <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3286636/\">doi:10.1126/science.1209236</a></li>\n  <li>Sanes, J. R., Lichtman, J. W. (1997) Can molecules explain long-term potentiation? <em>Nature Neurosci.</em> <strong>2</strong>(7):597-604. <a href=\"https://www.nature.com/articles/nn0799_597\">doi:10.1038/10154</a></li>\n</ol>","excerpt":"","languages":null,"categories":["note"],"tags":["blog"]},{"title":"Upgrading Guide from v1 to v2","permalink":"//upgrading-from-v1-to-v2.html","link":"//upgrading-from-v1-to-v2.html","date":"2018-07-23T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>Almace Scaffolding now migrates from Less to Sass, this may make your existing projects non-upgradable, it need quite a lot of work for you to do the migration if you use a custom theme that it’s powered by Less preprocessor. You have to compare your existing projects to <a href=\"https://github.com/sparanoid/almace-scaffolding/pull/85\">this Pull Request</a> side to side to make sure every change you made are sync’ed correctly.</p>\n\n<p>If you’re a casual blogger only change some color variables for your default theme, Curtana in this situation, that’s good, you can migrate to v2 easier: just run <code class=\"highlighter-rouge\">$ grunt update</code>.</p>\n\n<p>You should also migrate your own styles in <code class=\"highlighter-rouge\">user.less</code> to <code class=\"highlighter-rouge\">_user.scss</code> and <code class=\"highlighter-rouge\">_varaibles.scss</code>. Due to Sass limitation, I don’t have variable hoisting feature like native CSS or Less at hand, so I have to create two user defined stylesheets:</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">assets/_scss/_variables.scss</code> - This file should contain only Sass variables defined in theme Curtana. It will be loaded at the topmost of theme stylesheet <code class=\"highlighter-rouge\">app.scss</code>.</li>\n  <li><code class=\"highlighter-rouge\">assets/_scss/_user.scss</code> - where users create style customization.</li>\n</ul>\n\n<p>From 2.0.0, Almace Scaffolding still has the ability to use Less with Grunt.js, however it’s wise to write your theme in Sass for better future compatibility.</p>\n\n<p>If you’d like to stick with the Less version:</p>\n\n<ul>\n  <li>v1.1.11 will be the last version that supports Less.</li>\n  <li>Less version of theme Curtana will be avaiable as <code class=\"highlighter-rouge\">amsf/amsf-curtana-less</code>.</li>\n</ul>","excerpt":"Almace Scaffolding now migrates from Less to Sass, this may make your existing projects non-upgradable, it need quite a lot of work for you to do the migration if you use a custom theme that it’s powered by Less preprocessor. You have to compare your existing projects to this Pull Request side to side to make sure every change you made are sync’ed correctly.","languages":null,"categories":["old","news"],"tags":[]},{"title":"Upgrading Guide: v1.1.0","permalink":"//upgrading-guide-v1.1.0.html","link":"//upgrading-guide-v1.1.0.html","date":"2017-01-07T00:00:00-08:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>There’re some significant changes in update v1.1.0, action required after you upgrade Almace Scaffolding.</p>\n\n<p>In your front-matter fields:</p>\n\n<ul>\n  <li>Replace all <code class=\"highlighter-rouge\">svg-headline</code>, <code class=\"highlighter-rouge\">img-headline</code> with <code class=\"highlighter-rouge\">heading-img</code>.</li>\n  <li>Replace all <code class=\"highlighter-rouge\">svg-headline-width</code>, <code class=\"highlighter-rouge\">img-headline-width</code> with <code class=\"highlighter-rouge\">heading-img-width</code>.</li>\n  <li>Remove all <code class=\"highlighter-rouge\">svg-headline-height</code>, <code class=\"highlighter-rouge\">img-headline-height</code> as they’re deprecated and no longer available.</li>\n  <li>Add <code class=\"highlighter-rouge\">heading-img-local: true</code> if images are stored right inside your project.</li>\n</ul>\n\n<p>Check the following front-matter data for post thumbnails:</p>\n\n<ul>\n  <li>Replace all <code class=\"highlighter-rouge\">thumb</code> with <code class=\"highlighter-rouge\">thumbnail</code>.</li>\n  <li>Add <code class=\"highlighter-rouge\">thumb/</code> prefix to your filename, ie. <code class=\"highlighter-rouge\">thumbnail: thumb/my-post.png</code>.</li>\n  <li>Add <code class=\"highlighter-rouge\">thumbnail-local: true</code> if thumbnails are stored right inside your project.</li>\n</ul>","excerpt":"There’re some significant changes in update v1.1.0, action required after you upgrade Almace Scaffolding.","languages":null,"categories":["old","news"],"tags":[]},{"title":"Open Graph","permalink":"//open-graph.html","link":"//open-graph.html","date":"2017-01-06T00:00:00-08:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>Theme Curtana has full Open Graph and Twitter Cards support.</p>\n\n<p>It will look for the image in the following order:</p>\n\n<ol>\n  <li>Use <code class=\"highlighter-rouge\">page.thumbnail</code> if defined in your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>.</li>\n  <li>If no specified <code class=\"highlighter-rouge\">page.thumbnail</code> defined, it uses <a href=\"/custom-heading-background.html\">Heading Background Image</a> (aka. <code class=\"highlighter-rouge\">page.heading-bg</code>) if defined in your post front-matter field.</li>\n  <li>If no heading background image found, Curtana will try to grab the first image (wrapped inside <code class=\"highlighter-rouge\">&lt;img&gt;</code>) in your post as your post thumbnail</li>\n  <li>If nothing found, it fails back to <code class=\"highlighter-rouge\">logo.png</code> located at your site root.</li>\n</ol>\n\n<p>You can always use <code class=\"highlighter-rouge\">page.thumb_force_logo</code> in your post front-matter field to override the above lookup.</p>\n\n<p>Here’s a preview on Twitter:</p>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/open-graph-preview.png\" alt=\"Twitter Cards (Open Graph compatible) Preview\" /></p>","excerpt":"Theme Curtana has full Open Graph and Twitter Cards support.","languages":null,"categories":["old","note"],"tags":["curtana"]},{"title":"Jekyll Theme Compatibility","permalink":"//jekyll-theme-compatibility.html","link":"//jekyll-theme-compatibility.html","date":"2016-11-07T00:00:00-08:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>With recent release of Jekyll, it gets the built-in ability to support <a href=\"https://jekyllrb.com/docs/themes/\">themes</a>, since we’ve already added theme support in 2015, the original config variables <code class=\"highlighter-rouge\">theme</code> would be conflicted with the built-in one.</p>\n\n<p>To solve this issue, I’ve rename our <code class=\"highlighter-rouge\">theme</code> option to <code class=\"highlighter-rouge\">amsf_theme</code>. And here’s what you need to do to resovle compatibility issues after upgrading to latest Almace Scaffolding:</p>\n\n<ul>\n  <li>Rename your original <code class=\"highlighter-rouge\">theme</code> option in <code class=\"highlighter-rouge\">_amsf.yml</code> to <code class=\"highlighter-rouge\">amsf_theme</code>.</li>\n  <li>Add <code class=\"highlighter-rouge\">amsf_theme_url</code> with your theme Git URL.</li>\n  <li>Replace all <code class=\"highlighter-rouge\">site.theme</code> with <code class=\"highlighter-rouge\">site.amsf_theme</code> in your page templates.</li>\n</ul>","excerpt":"With recent release of Jekyll, it gets the built-in ability to support themes, since we’ve already added theme support in 2015, the original config variables theme would be conflicted with the built-in one.","languages":null,"categories":["old","news"],"tags":[]},{"title":"Introducing Curtana","permalink":"//theme-curtana.html","link":"//theme-curtana.html","date":"2016-06-01T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>Curtana is the default theme of <a href=\"https://sparanoid.com/lab/amsf/\">AMSF</a> (Almace Scaffolding).</p>\n\n<h3 id=\"features\">Features</h3>\n\n<ul>\n  <li>A variant of <a href=\"https://sparanoid.com/\">sparanoid.com</a>, looking great on any modern browsers</li>\n  <li>Minimalism design, No jQuery, no <code class=\"highlighter-rouge\">everybody-shake-ur-body.js</code></li>\n  <li>Ideal for personal blog, portfolio, product blog and Tumblr-like link blog</li>\n  <li>(Maybe) <a href=\"https://github.com/sparanoid/sparanoid.com/commit/9b44b4c0f57c3dd1e828d828a95cc21b992785ce\">the first</a> template that uses <a href=\"https://www.w3.org/TR/css3-values/#viewport-relative-lengths\">viewport relative units</a></li>\n  <li>Handcrafted stylesheets. No Bootstrap or other bloated frameworks are used, unminified CSS &lt; 12 KB</li>\n  <li>Predefined CSS and Sass (SCSS) variables make it easier to change color schemes for posts</li>\n  <li>Dynamic color scheme for code highlighters powered by <a href=\"https://sparanoid.com/lab/randomized/\">Randomized</a></li>\n  <li>Open Graph and Twitter Cards support</li>\n  <li>No Internet Explorer support</li>\n</ul>","excerpt":"Curtana is the default theme of AMSF (Almace Scaffolding).","languages":null,"categories":["old","note"],"tags":["curtana"]},{"title":"Deployment Methods","permalink":"//deployment-methods.html","link":"//deployment-methods.html","date":"2016-03-18T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>Sites generated using Almace Scaffolding can be deployed in nearly any web hosting services. A few of the most common deployment techniques are described below. More deployment methods please refer to <a href=\"https://jekyllrb.com/docs/deployment-methods/\">Jekyll - Deployment methods</a>.</p>\n\n<h2 id=\"web-hosting-providers-ftpsftp\">Web Hosting Providers (FTP/SFTP)</h2>\n\n<p>Just about any traditional web hosting provider will let you upload files to their servers over FTP. You can simply run the <code class=\"highlighter-rouge\">grunt build</code> command and upload all files generated under <code class=\"highlighter-rouge\">_site</code> to the HTTP root folder of your hosting account.</p>\n\n<h2 id=\"rsync\">rsync</h2>\n\n<p>There’s a <code class=\"highlighter-rouge\">_deploy.yml</code> at the root of your AMSF project containing a basic <code class=\"highlighter-rouge\">rsync</code> configurations. Change these configurations to yours and then run:</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt deploy:rsync\n</code></pre></div></div>\n\n<p>You can deploy it for specific environment, the following command will deploy your site to <code class=\"highlighter-rouge\">beta</code> environment via <code class=\"highlighter-rouge\">rsync</code> method you defined in <code class=\"highlighter-rouge\">_deploy.yml</code>:</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt deploy:rsync <span class=\"nt\">--env</span><span class=\"o\">=</span>beta\n</code></pre></div></div>\n\n<h2 id=\"amazon-s3-s3_website\">Amazon S3 (s3_website)</h2>\n\n<p>You can also deploy your site to Amazon S3 via <a href=\"https://github.com/laurilehmijoki/s3_website\">s3_website</a>, see <code class=\"highlighter-rouge\">s3_website.example.yml</code> for more info.</p>","excerpt":"Sites generated using Almace Scaffolding can be deployed in nearly any web hosting services. A few of the most common deployment techniques are described below. More deployment methods please refer to Jekyll - Deployment methods.","languages":null,"categories":["old","note"],"tags":["deployment"]},{"title":"Multiple Themes Support","permalink":"//multiple-themes-support.html","link":"//multiple-themes-support.html","date":"2015-08-18T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>From version 0.0.31, you can now use multiple themes in Almace Scaffolding. See <a href=\"/themes.html\">Themes</a> for more information.</p>","excerpt":"From version 0.0.31, you can now use multiple themes in Almace Scaffolding. See Themes for more information.","languages":null,"categories":["old","news"],"tags":[]},{"title":"Welcome","permalink":"//welcome.html","link":"//welcome.html","date":"2014-06-13T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>AMSF, a.k.a. <strong>Almace Scaffolding</strong>, is a super-fast Jekyll framework fighting against the website obesity. It supports LiveReload, Sass, HTML minification, inlined stylesheets and more.</p>\n\n<p class=\"largetype\">\n  <a href=\"/getting-started.html\">Getting Started →</a>\n</p>\n\n<p>Go to the <a href=\"https://github.com/sparanoid/almace-scaffolding\">GitHub</a> page for downloads, bug reports, and feature requests.</p>\n\n<h2 id=\"features\">Features</h2>\n\n<ul>\n  <li>Theme switching, you can switch themes with just one command</li>\n  <li>A basic, fully configured Jekyll setup with well-defined <a href=\"https://github.com/sparanoid/almace-scaffolding/blob/master/_app/feed-atom.xml\">Atom feed</a> and <a href=\"https://github.com/sparanoid/almace-scaffolding/blob/master/_app/sitemap.xml\">sitemap</a></li>\n  <li><strong>Almace Scaffolding</strong> ships a sleek responsive theme <a href=\"https://github.com/amsf/amsf-curtana\">Curtana</a>, a variant of <a href=\"https://sparanoid.com/\">sparanoid.com</a>, looking great on any modern browsers</li>\n  <li>Every minified page generates only one HTTP request <sup id=\"fnref:1\"><a href=\"#fn:1\" class=\"footnote\">1</a></sup></li>\n  <li><a href=\"https://github.com/sparanoid/almace-scaffolding/blob/master/_config.init.yml\">Tons of configurable settings</a> for your posts and site customization</li>\n  <li>Service Worker support for lightning fast experience</li>\n  <li>Built with Grunt.js for easy development</li>\n  <li>Travis support</li>\n</ul>\n\n<div class=\"footnotes\">\n  <ol>\n    <li id=\"fn:1\">\n      <p>Based on the theme you’re using, theme Curtana generates only one HTTP request for production build when your posts don’t have fancy sliders or other external media files. <a href=\"#fnref:1\" class=\"reversefootnote\">&#8617;&#xfe0e;</a></p>\n    </li>\n  </ol>\n</div>","excerpt":"AMSF, a.k.a. Almace Scaffolding, is a super-fast Jekyll framework fighting against the website obesity. It supports LiveReload, Sass, HTML minification, inlined stylesheets and more.","languages":null,"categories":["old","note"],"tags":["getting-started"]},{"title":"Getting Started","permalink":"//getting-started.html","link":"//getting-started.html","date":"2014-06-12T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<h2 id=\"requirements\">Requirements</h2>\n\n<p>Almace Scaffolding has exactly the same requirements as Jekyll. For more info please refer to <a href=\"https://jekyllrb.com/docs/installation/\">Installation - Jekyll</a>.</p>\n\n<h2 id=\"quick-start\">Quick Start</h2>\n\n<ol>\n  <li><a href=\"https://github.com/sparanoid/almace-scaffolding/fork\">Fork</a> or clone the repo.</li>\n  <li>Install dependencies with Ruby gem <a href=\"https://bundler.io/\"><code class=\"highlighter-rouge\">bundler</code></a> and Node.js package manager <a href=\"https://www.npmjs.org/\"><code class=\"highlighter-rouge\">npm</code></a>.</li>\n  <li>Run <code class=\"highlighter-rouge\">grunt init</code> to initialize your project.</li>\n  <li>Run <code class=\"highlighter-rouge\">grunt serve</code> to fire up a local server.</li>\n  <li>Edit and customize your site.</li>\n  <li>Change Git remote to your own repo.</li>\n  <li>Push and deploy.</li>\n</ol>\n\n<p>So in short for geeks:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>git clone https://github.com/sparanoid/almace-scaffolding my-site\n<span class=\"nv\">$ </span><span class=\"nb\">cd </span>my-site\n<span class=\"nv\">$ </span>bundle <span class=\"nb\">install</span> <span class=\"o\">&amp;&amp;</span> yarn <span class=\"nb\">install</span>\n<span class=\"nv\">$ </span>grunt init\n<span class=\"nv\">$ </span>grunt serve\n<span class=\"c\"># ...editing</span>\n<span class=\"nv\">$ </span>git remote set-url origin https://github.com/sparanoid/my-site.git\n<span class=\"nv\">$ </span>git push <span class=\"nt\">-u</span> origin master\n<span class=\"c\"># ...publishing</span>\n<span class=\"nv\">$ </span>grunt <span class=\"o\">&amp;&amp;</span> grunt deploy:rsync <span class=\"nt\">--env</span><span class=\"o\">=</span>prod\n</code></pre></div></div>\n\n<h2 id=\"download\">Download</h2>\n\n<p>Go to the <a href=\"https://github.com/sparanoid/almace-scaffolding\">GitHub repository</a> for downloads, bug reports, and feature requests.</p>\n\n<h2 id=\"transfer-from-jekyll\">Transfer from Jekyll</h2>\n\n<p>You can simply copy all posts from your old Jekyll setup into <code class=\"highlighter-rouge\">_app/_posts</code>, you can also transfer your custom pages into <code class=\"highlighter-rouge\">_app/_pages/</code>.</p>\n\n<h2 id=\"upgrading\">Upgrading</h2>\n\n<p>It will be easy if you’re a casual blogger and keep every core and template file untouched. You can use the following command to update Almace Scaffolding core files:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt amsf-update\n</code></pre></div></div>\n\n<p>It checks the latest Almace Scaffolding build from GitHub and update core files automatically. Please keep in mind that if you changed some of the AMSF core files this action will <strong>override</strong> the changes you made. So it’s recommended to keep your project under version control, you will be always be able to compare changes for Almace Scaffolding.</p>\n\n<h2 id=\"using-beta-release\">Using Beta Release</h2>\n\n<p>By default, when you run <code class=\"highlighter-rouge\">amsf-update</code> you will get updated files from <code class=\"highlighter-rouge\">release</code> branch. However, I’m continuously working on Almace Scaffolding, so there may have testing branches you can try and give me feedback if you’re interested. You can check the AMSF GitHub repository for available branches, and it’s very easy to switch:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt amsf-update <span class=\"nt\">--branch</span><span class=\"o\">=</span>feat/service-worker\n</code></pre></div></div>\n\n<p>The branch <code class=\"highlighter-rouge\">master</code> is the one which is always available to checkout and also has the latest changes:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt amsf-update <span class=\"nt\">--branch</span><span class=\"o\">=</span>master\n</code></pre></div></div>\n\n<p>If you messed up with the testing branch, don’t worry, you can just run a normal update to revert them back:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt amsf-update\n</code></pre></div></div>","excerpt":"Requirements","languages":null,"categories":["old","note"],"tags":["getting-started"]},{"title":"Customizing Styles","permalink":"//customizing-styles.html","link":"//customizing-styles.html","date":"2014-06-11T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>You can customize the basic look and feel without touching the theme files by changing <code class=\"highlighter-rouge\">user.js</code> and <code class=\"highlighter-rouge\">user.scss</code>:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── _app/\n|   ├── assets/\n|   |   └── _js/\n|   |   |   └── user.js\n|   |   └── _scss/\n|   |   |   └── user.scss\n|   |   └── themes/\n|   |   |   └── ...\n</code></pre></div></div>\n\n<p>These files won’t be overwritten when you update Almace Scaffolding or update your themes.</p>","excerpt":"You can customize the basic look and feel without touching the theme files by changing user.js and user.scss:","languages":null,"categories":["old","note"],"tags":["customization"]},{"title":"Configuration","permalink":"//configuration.html","link":"//configuration.html","date":"2014-06-11T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<h2 id=\"configuration-settings\">Configuration Settings</h2>\n\n<ul>\n  <li>All AMSF built-in settings can be configured at <a href=\"https://github.com/sparanoid/almace-scaffolding/blob/master/_config.yml\"><code class=\"highlighter-rouge\">_config.yml</code></a>.</li>\n  <li>Theme specific variables can be found at <code class=\"highlighter-rouge\">./_app/_data/theme-name.yml</code>.</li>\n  <li>Additional variables are stored in <a href=\"https://github.com/sparanoid/almace-scaffolding/blob/master/_app/_data\"><code class=\"highlighter-rouge\">./_app/_data/</code></a> directory. They can be accessed by Jekyll. (<a href=\"https://jekyllrb.com/docs/datafiles/\">More info</a>)</li>\n  <li>You should also change <code class=\"highlighter-rouge\">favicon.*</code> and <code class=\"highlighter-rouge\">apple-touch-icon.png</code> to yours.</li>\n  <li><code class=\"highlighter-rouge\">logo.png</code> is mainly used by Open Graph and Twitter Cards when there’s no featured image in a post, you should also design your own.</li>\n  <li>More customization please refer to theme specific documentation</li>\n</ul>\n\n<h2 id=\"tips\">Tips</h2>\n\n<ul>\n  <li>Not familiar with <a href=\"https://daringfireball.net/projects/markdown/\">Markdown</a>? Try <a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\">Markdown Cheatsheet</a>.</li>\n  <li>You can use Jekyll’s <a href=\"https://jekyllrb.com/docs/templates/#code-snippet-highlighting\">built-in syntax highlighting</a>, I’ve included a default theme for this project.</li>\n  <li><a href=\"https://kramdown.gettalong.org/quickref.html#tables\">Tables</a> and <a href=\"https://kramdown.gettalong.org/quickref.html#footnotes\">footnotes</a> are also available to use.</li>\n</ul>","excerpt":"Configuration Settings","languages":null,"categories":["old","note"],"tags":["getting-started"]},{"title":"Themes","permalink":"//themes.html","link":"//themes.html","date":"2014-06-10T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<h2 id=\"overview\">Overview</h2>\n\n<p>In the latest build, I’ve added multiple themes support, finally, you can switch themes with just one command.</p>\n\n<p class=\"note\">This is an experimental feature and may change until the feature stabilizes.</p>\n\n<h2 id=\"installing-themes\">Installing Themes</h2>\n\n<p>The AMSF framework ships a default theme <a href=\"https://github.com/amsf/amsf-curtana\">Curtana</a>. You can also install as many themes as you like and switch to the one you prefer in any time.</p>\n\n<h3 id=\"via-git-github\">Via Git (GitHub)</h3>\n\n<p>The easiest way to install new theme is via <code class=\"highlighter-rouge\">theme-add</code>, the following command will install theme Curtana from its official repo <code class=\"highlighter-rouge\">amsf/amsf-curtana</code>:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt theme-add <span class=\"nt\">--theme</span><span class=\"o\">=</span>curtana\n</code></pre></div></div>\n\n<p>If you’d install custom theme from other users, append <code class=\"highlighter-rouge\">--user</code> in your command, the following command will install a new theme named <code class=\"highlighter-rouge\">bootstrap-sass</code> from <code class=\"highlighter-rouge\">sparanoid/amsf-bootstrap-sass</code></p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt theme-add <span class=\"nt\">--theme</span><span class=\"o\">=</span>bootstrap-sass <span class=\"nt\">--user</span><span class=\"o\">=</span>sparanoid\n</code></pre></div></div>\n\n<h3 id=\"manually-install\">Manually Install</h3>\n\n<p>You can also install themes manually. find an AMSF theme (Curtana, for example), download the package and uncompress all files to <code class=\"highlighter-rouge\">.amsf-cache/themes</code> directory, the file structure should look like:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── .amsf-cache/ (Almace Scaffolding cache directory)\n|   ├── themes/\n|   |   └── curtana/\n|   |   |   └── assets/\n|   |   |   └── includes/\n|   |   |   └── layouts/\n|   |   |   └── pages/\n|   |   |   └── config.yml\n└── _app/\n</code></pre></div></div>\n\n<p>Then execute the following command:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt activate <span class=\"nt\">--theme</span><span class=\"o\">=</span>curtana\n</code></pre></div></div>\n\n<p>You current theme will be backed up to <code class=\"highlighter-rouge\">.amsf-cache/themes/your-old-theme/</code> and the new theme <code class=\"highlighter-rouge\">curtana</code> will be installed to the appropriate directories.</p>\n\n<h2 id=\"upgrading-themes\">Upgrading Themes</h2>\n\n<p>You can update your current activated theme by the following command. The activated theme will be downloaded from GitHub automatically if there’s any update:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt theme-update\n</code></pre></div></div>\n\n<p>Please note that only themes added via GitHub can be updated.</p>","excerpt":"Overview","languages":null,"categories":["old","note"],"tags":["customization"]},{"title":"Creating Your Own Theme","permalink":"//creating-themes.html","link":"//creating-themes.html","date":"2014-06-09T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<h2 id=\"overview\">Overview</h2>\n\n<p>You can create your own theme in AMSF, theme files are located in the following location (I use default theme Curtana here for better understanding):</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── _app/\n|   ├── _data/\n|   |   └── curtana.yml\n|   ├── _includes/\n|   |   └── themes/\n|   |   |   └── curtana/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   ├── _pages/\n|   |   └── themes/\n|   |   |   └── curtana/\n|   |   |   |   └── example-page.md\n|   |   |   |   └── ...\n|   ├── assets/\n|   |   └── themes/\n|   |   |   └── curtana/\n|   |   |   |   └── _js/\n|   |   |   |   └── _scss/\n|   |   |   |   └── ...\n</code></pre></div></div>\n\n<p>The theme specific config <code class=\"highlighter-rouge\">curtana.yml</code> should have the same filename as your theme name. It should contain theme specific variables and can also override AMSF built-in settings.</p>\n\n<p>More info about theme structure you can check out my default theme <a href=\"https://github.com/amsf/amsf-curtana\">Curtana</a>.</p>\n\n<p>You can also have multiple themes in your project, as many as you like. For example if you also have themes Bootstrap and Ghost installed, the file structure should be:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── _app/\n|   ├── _data/\n|   |   └── bootstrap.yml\n|   |   └── curtana.yml\n|   |   └── ghost.yml\n|   ├── _includes/\n|   |   └── themes/\n|   |   |   └── bootstrap/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   |   |   └── curtana/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   |   |   └── ghost/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   ├── _pages/\n|   |   └── themes/\n|   |   |   └── bootstrap/\n|   |   |   |   └── example-about.md\n|   |   |   |   └── example-blog.md\n|   |   |   |   └── example-fluid-container.md\n|   |   |   |   └── ...\n|   |   |   └── curtana/\n|   |   |   |   └── example-about.md\n|   |   |   |   └── example-news.md\n|   |   |   |   └── ...\n|   |   |   └── ghost/\n|   |   |   |   └── example-archive.md\n|   |   |   |   └── example-page.md\n|   |   |   |   └── example-tagcloud.md\n|   |   |   |   └── ...\n|   ├── assets/\n|   |   └── themes/\n|   |   |   └── bootstrap/\n|   |   |   |   └── _coffee/\n|   |   |   |   └── _scss/\n|   |   |   |   └── images/\n|   |   |   └── curtana/\n|   |   |   |   └── _js/\n|   |   |   |   └── _scss/\n|   |   |   |   └── svg/\n|   |   |   └── ghost/\n|   |   |   |   └── _js/\n|   |   |   |   └── _less/\n|   |   |   |   └── fonts/\n...\n</code></pre></div></div>\n\n<h2 id=\"amsf-options\">AMSF Options</h2>\n\n<p>There’re several built-in options you can use in your theme. These options can also be overridden in theme specific config.</p>\n\n<h3 id=\"sitename\"><code class=\"highlighter-rouge\">site.name</code></h3>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;footer</span> <span class=\"na\">class=</span><span class=\"s\">\"footer\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;ul&gt;</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/\"</span><span class=\"nt\">&gt;</span>{{ site.name }}<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/atom.xml\"</span><span class=\"nt\">&gt;</span>Atom<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n  <span class=\"nt\">&lt;/ul&gt;</span>\n<span class=\"nt\">&lt;/footer&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;footer</span> <span class=\"na\">class=</span><span class=\"s\">\"footer\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;ul&gt;</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/\"</span><span class=\"nt\">&gt;</span>Almace Scaffolding<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/atom.xml\"</span><span class=\"nt\">&gt;</span>Atom<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n  <span class=\"nt\">&lt;/ul&gt;</span>\n<span class=\"nt\">&lt;/footer&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"sitedescription\"><code class=\"highlighter-rouge\">site.description</code></h3>\n\n<p>Site description, will appear in the document meta and Atom feed subtitle.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"og:description\"</span> <span class=\"na\">content=</span><span class=\"s\">\"{{ site.description }}\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"og:description\"</span> <span class=\"na\">content=</span><span class=\"s\">\"A super-fast Jekyll framework fighting against the website obesity.\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"sitefile\"><code class=\"highlighter-rouge\">site.file</code></h3>\n\n<p>Media assets URL used in posts, without trailing slash. In the most cases this URL should be powered by a CDN provider.</p>\n\n<p>Config:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">file</span><span class=\"pi\">:</span> <span class=\"s\">//d349cztnlupsuf.cloudfront.net</span>\n</code></pre></div></div>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;img</span> <span class=\"na\">src=</span><span class=\"s\">\"{{ site.file }}/post-thumbnail.jpg\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;img</span> <span class=\"na\">src=</span><span class=\"s\">\"//d349cztnlupsuf.cloudfront.net/post-thumbnail.jpg\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"sitetwitter\"><code class=\"highlighter-rouge\">site.twitter</code></h3>\n\n<p>Site Twitter account handle.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"https://twitter.com/{{ site.twitter }}\"</span><span class=\"nt\">&gt;</span>Follow @{{ site.twitter }} on Twitter<span class=\"nt\">&lt;/a&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"https://twitter.com/sparanoid\"</span><span class=\"nt\">&gt;</span>Follow @sparanoid on Twitter<span class=\"nt\">&lt;/a&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"siteforce_utf_8\"><code class=\"highlighter-rouge\">site.force_utf_8</code></h3>\n\n<p>Force UTF-8 encoding, enable this will simply add <code class=\"highlighter-rouge\">&lt;meta charset=\"utf-8\"&gt;</code> to the head of your pages.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% if site.force_utf_8 %}\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"utf-8\"</span><span class=\"nt\">&gt;</span>\n{% endif %}\n</code></pre></div></div>\n\n<h3 id=\"siterobots\"><code class=\"highlighter-rouge\">site.robots</code></h3>\n\n<p>You can define your own records in <code class=\"highlighter-rouge\">robots.txt</code>.</p>\n\n<p>Config:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">robots</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">User-agent:</span><span class=\"nv\"> </span><span class=\"s\">*\"</span>\n  <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">Disallow:</span><span class=\"nv\"> </span><span class=\"s\">/ajax/\"</span>\n  <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">Disallow:</span><span class=\"nv\"> </span><span class=\"s\">/@async\"</span>\n  <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">Disallow:</span><span class=\"nv\"> </span><span class=\"s\">/log/\"</span>\n</code></pre></div></div>\n\n<h2 id=\"theme-features\">Theme Features</h2>\n\n<p>There’re some features can be integrated into your theme.</p>\n\n<h3 id=\"basic-multi-language-support\">(Basic) Multi-Language Support</h3>\n\n<p>You can define post / page language in your front-matter field:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">lang</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"s\">zh-tw</span>\n</code></pre></div></div>\n\n<p>An additional <code class=\"highlighter-rouge\">lang</code> HTML attribute will be added to your final rendering:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;article</span> <span class=\"na\">lang=</span><span class=\"s\">\"zh-tw\"</span><span class=\"nt\">&gt;</span>\n  ...\n<span class=\"nt\">&lt;/article&gt;</span>\n</code></pre></div></div>\n\n<p>If your post / page content is multilingual, you can also define multiple languages in array:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">lang</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"s\">zh-tw</span>\n  <span class=\"pi\">-</span> <span class=\"s\">en-us</span>\n</code></pre></div></div>\n\n<p>Please note that only the first item defined in <code class=\"highlighter-rouge\">lang</code> array will be used in final <code class=\"highlighter-rouge\">lang</code> output, the additional languages will be available in JSON feed output:</p>\n\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"s2\">\"languages\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"zh-tw\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"en-us\"</span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"s2\">\"categories\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"note\"</span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"s2\">\"tags\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"miscellaneous\"</span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<h3 id=\"smooshing-assets\">Smooshing Assets</h3>\n\n<p>For better performance, Almace Scaffolding will find all the CSS, script links and images in compiled HTML, and outputs a version with all the CSS, scripts and images (Base64) written inline. Sounds cool? but it needs theme support. Here’s how:</p>\n\n<p>You can simply add the query string <code class=\"highlighter-rouge\">?assets-inline</code> at the end of the file you’d like to be inlined in production site:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- This CSS will be inlined into HTML --&gt;</span>\n<span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">href=</span><span class=\"s\">\"{{ '/css/app.css?assets-inline' | prepend: amsf_theme_assets }}\"</span><span class=\"nt\">&gt;</span>\n\n<span class=\"c\">&lt;!-- This script will be inlined into HTML --&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"{{ '/js/app.js?assets-inline' | prepend: amsf_theme_assets }}\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"user-custom-styles-support\">User Custom Styles Support</h3>\n\n<p>Define the following code snippet into your theme styles (Sass) will allow users to custom your theme without touching the theme files:</p>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">//</span> <span class=\"nt\">Import</span> <span class=\"nt\">user</span> <span class=\"nt\">custom</span> <span class=\"nt\">styles</span>\n<span class=\"k\">@import</span> <span class=\"s1\">\"../../../_scss/custom\"</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<h3 id=\"user-custom-scripts-support\">User Custom Scripts Support</h3>\n\n<p>Define the following code snippet into your theme template (it’s recommended to put it in footer) will allow users to add custom scripts without touching the theme files:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- User custom scripts --&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"{{ '/js/user.js?assets-inline' | prepend: amsf_user_assets }}\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"page--post-specific-css-block-support\">Page / Post Specific CSS Block Support</h3>\n\n<p>This allow your user to define page / post specific CSS blocks in front-matter data:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- Page-wide custom CSS --&gt;</span>\n{{ amsf_page_css }}\n</code></pre></div></div>\n\n<h3 id=\"google-analytics-support\">Google Analytics Support</h3>\n\n<p>This allow your user to be able to use Google Analytics for their site, tracking ID can be changed in config file:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- Google Analytics tracking code --&gt;</span>\n{{ amsf_google_analytics }}\n</code></pre></div></div>\n\n<h3 id=\"post-published-time\">Post Published Time</h3>\n\n<p>This allow you to get the published time of current post.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"article:published_time\"</span> <span class=\"na\">content=</span><span class=\"s\">\"{{ amsf_page_pubdate | date_to_xmlschema }}\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"article:published_time\"</span> <span class=\"na\">content=</span><span class=\"s\">\"2014-01-01T00:00:00+08:00\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"post-modified-time\">Post Modified Time</h3>\n\n<p>This allow you to get the modified time of current post.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"article:modified_time\"</span> <span class=\"na\">content=</span><span class=\"s\">\"{{ amsf_page_update | date_to_xmlschema }}\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"article:modified_time\"</span> <span class=\"na\">content=</span><span class=\"s\">\"2014-01-03T03:17:49+08:00\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"post-reading-time\">Post Reading Time</h3>\n\n<p>This allow you to show average reading time of current post.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Reading time: {{ amsf_page_reading_time }}\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gh\"># Less than 200 words</span>\nReading time: Less than 1 min\n\n<span class=\"gh\"># Around 200 words</span>\nReading time: 1 min\n\n<span class=\"gh\"># More than 200 words</span>\nReading time: 34 mins\n\n<span class=\"gh\"># More than 1 hour</span>\nReading time: 1 hr\nReading time: 1 hr 1 min\nReading time: 3 hrs 20 mins\n</code></pre></div></div>\n\n<h2 id=\"publishing-themes\">Publishing Themes</h2>\n\n<p>You really like your custom design and wanna show it off to the world? Cool, you can create (pack) you own theme by the following command:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt theme-save\n</code></pre></div></div>\n\n<p>The activated theme will be saved to AMSF cache (<code class=\"highlighter-rouge\">.amsf-cache/</code>) with correct file and directory structure, then you can upload your theme to GitHub.</p>\n\n<p>Still confusing? see my default theme <a href=\"https://github.com/amsf/amsf-curtana\">Curtana</a> for reference.</p>","excerpt":"Overview","languages":null,"categories":["old","note"],"tags":["customization"]},{"title":"Syntax Highlighting","permalink":"//syntax-highlighting.html","link":"//syntax-highlighting.html","date":"2014-06-06T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>Code highlighting demo, powered by Rouge. More info about code highlighting can be found at <a href=\"https://jekyllrb.com/docs/templates/#code-snippet-highlighting\">Jekyll’s documentation</a>.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>.code-text (@link, @text) when (lightness(@link) &gt;= 50%) and (lightness(@link) &lt; lightness(@text)) {\n  @return-color: lighten(@text, 20%);\n  @return-value: 30%;\n}\n</code></pre></div></div>\n\n<div class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{\n  \"scripts\": {\n<span class=\"gd\">-   \"precommit\": \"npm test\",\n-   \"commitmsg\": \"commitlint -E GIT_PARAMS\"\n</span>  },\n<span class=\"gi\">+ \"husky\": {\n+   \"hooks\": {\n+     \"pre-commit\": \"npm test\",\n+     \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n+   }\n+ }\n</span>}\n</code></pre></div></div>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">show</span>\n  <span class=\"vi\">@widget</span> <span class=\"o\">=</span> <span class=\"no\">Widget</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"ss\">:id</span><span class=\"p\">])</span>\n  <span class=\"n\">respond_to</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"nb\">format</span><span class=\"o\">|</span>\n    <span class=\"nb\">format</span><span class=\"p\">.</span><span class=\"nf\">html</span> <span class=\"c1\"># show.html.erb</span>\n    <span class=\"nb\">format</span><span class=\"p\">.</span><span class=\"nf\">json</span> <span class=\"p\">{</span> <span class=\"n\">render</span> <span class=\"ss\">json: </span><span class=\"vi\">@widget</span> <span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<div class=\"language-php highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">echo</span> <span class=\"s2\">\"Hello, world!\"</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"k\">def</span> <span class=\"nf\">print_hi</span><span class=\"p\">(</span><span class=\"nb\">name</span><span class=\"p\">)</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"Hi, </span><span class=\"si\">#{</span><span class=\"nb\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"k\">end</span>\n<span class=\"n\">print_hi</span><span class=\"p\">(</span><span class=\"s1\">'Tom'</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\" data-lang=\"html\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td><td class=\"code\"><pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;title&gt;</span>Title!<span class=\"nt\">&lt;/title&gt;</span>\n  <span class=\"nt\">&lt;/head&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;h1</span> <span class=\"na\">id=</span><span class=\"s\">\"title\"</span> <span class=\"na\">class=</span><span class=\"s\">\"heading\"</span><span class=\"nt\">&gt;</span>Example<span class=\"nt\">&lt;/h1&gt;</span>\n    <span class=\"nt\">&lt;p</span> <span class=\"na\">id=</span><span class=\"s\">\"foo\"</span><span class=\"nt\">&gt;</span>Hello, World!<span class=\"nt\">&lt;/p&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span><span class=\"kd\">var</span> <span class=\"nx\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"nt\">&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;style </span><span class=\"na\">type=</span><span class=\"s\">\"text/css\"</span><span class=\"nt\">&gt;</span><span class=\"nf\">#foo</span> <span class=\"p\">{</span> <span class=\"nl\">font-weight</span><span class=\"p\">:</span> <span class=\"nb\">bold</span><span class=\"p\">;</span> <span class=\"p\">}</span><span class=\"nt\">&lt;/style&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span></pre></td></tr></tbody></table></code></pre></figure>\n\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Load the http module to create an http server.</span>\n<span class=\"kd\">var</span> <span class=\"nx\">http</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'http'</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Configure our HTTP server to respond with Hello World to all requests.</span>\n<span class=\"kd\">var</span> <span class=\"nx\">server</span> <span class=\"o\">=</span> <span class=\"nx\">http</span><span class=\"p\">.</span><span class=\"nx\">createServer</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">request</span><span class=\"p\">,</span> <span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">writeHead</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"Content-Type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"text/plain\"</span><span class=\"p\">});</span>\n  <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">(</span><span class=\"s2\">\"Hello World</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">// Listen on port 8000, IP defaults to 127.0.0.1</span>\n<span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"mi\">8000</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Put a friendly message on the terminal</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"Server running at https://127.0.0.1:8000/\"</span><span class=\"p\">);</span>\n</code></pre></div></div>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">.code-text</span> <span class=\"o\">(</span><span class=\"k\">@link</span><span class=\"p\">,</span> <span class=\"err\">@</span><span class=\"nb\">text</span><span class=\"p\">)</span> <span class=\"n\">when</span> <span class=\"p\">(</span><span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">link</span><span class=\"p\">)</span> <span class=\"err\">&gt;=</span> <span class=\"m\">50%</span><span class=\"p\">)</span> <span class=\"n\">and</span> <span class=\"p\">(</span><span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">link</span><span class=\"p\">)</span> <span class=\"err\">&lt;</span> <span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"nb\">text</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n  <span class=\"k\">@return-color</span><span class=\"p\">:</span> <span class=\"n\">lighten</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"nb\">text</span><span class=\"p\">,</span> <span class=\"m\">20%</span><span class=\"p\">);</span>\n  <span class=\"k\">@return-value</span><span class=\"p\">:</span> <span class=\"m\">30%</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;title&gt;</span>Title!<span class=\"nt\">&lt;/title&gt;</span>\n  <span class=\"nt\">&lt;/head&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;h1</span> <span class=\"na\">id=</span><span class=\"s\">\"title\"</span> <span class=\"na\">class=</span><span class=\"s\">\"heading\"</span><span class=\"nt\">&gt;</span>Example<span class=\"nt\">&lt;/h1&gt;</span>\n    <span class=\"nt\">&lt;p</span> <span class=\"na\">id=</span><span class=\"s\">\"foo\"</span><span class=\"nt\">&gt;</span>Hello, World!<span class=\"nt\">&lt;/p&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span><span class=\"kd\">var</span> <span class=\"nx\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"nt\">&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;style </span><span class=\"na\">type=</span><span class=\"s\">\"text/css\"</span><span class=\"nt\">&gt;</span><span class=\"nf\">#foo</span> <span class=\"p\">{</span> <span class=\"nl\">font-weight</span><span class=\"p\">:</span> <span class=\"nb\">bold</span><span class=\"p\">;</span> <span class=\"p\">}</span><span class=\"nt\">&lt;/style&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre></div></div>\n\n<div class=\"language-llvm highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">; copied from https://llvm.org/docs/LangRef.html#module-structure</span>\n<span class=\"c1\">; Declare the string constant as a global constant.</span>\n<span class=\"vg\">@.str</span> <span class=\"p\">=</span> <span class=\"k\">private</span> <span class=\"k\">unnamed_addr</span> <span class=\"k\">constant</span> <span class=\"p\">[</span><span class=\"m\">13</span> <span class=\"p\">x</span> <span class=\"kt\">i8</span><span class=\"p\">]</span> <span class=\"s\">c\"hello world\\0A\\00\"</span>\n\n<span class=\"c1\">; External declaration of the puts function</span>\n<span class=\"k\">declare</span> <span class=\"kt\">i32</span> <span class=\"vg\">@puts</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">*</span> <span class=\"k\">nocapture</span><span class=\"p\">)</span> <span class=\"k\">nounwind</span>\n\n<span class=\"c1\">; Definition of main function</span>\n<span class=\"k\">define</span> <span class=\"kt\">i32</span> <span class=\"vg\">@main</span><span class=\"p\">()</span> <span class=\"p\">{</span>   <span class=\"c1\">; i32()*</span>\n  <span class=\"c1\">; Convert [13 x i8]* to i8  *...</span>\n  <span class=\"nv\">%cast210</span> <span class=\"p\">=</span> <span class=\"k\">getelementptr</span> <span class=\"p\">[</span><span class=\"m\">13</span> <span class=\"p\">x</span> <span class=\"kt\">i8</span><span class=\"p\">]*</span> <span class=\"vg\">@.str</span><span class=\"p\">,</span> <span class=\"kt\">i64</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"kt\">i64</span> <span class=\"m\">0</span>\n\n  <span class=\"c1\">; Call puts function to write out the string to stdout.</span>\n  <span class=\"k\">call</span> <span class=\"kt\">i32</span> <span class=\"vg\">@puts</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">*</span> <span class=\"nv\">%cast210</span><span class=\"p\">)</span>\n  <span class=\"k\">ret</span> <span class=\"kt\">i32</span> <span class=\"m\">0</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">; Named metadata</span>\n<span class=\"nv\">!1</span> <span class=\"p\">=</span> <span class=\"kt\">metadata</span> <span class=\"p\">!{</span><span class=\"kt\">i32</span> <span class=\"m\">42</span><span class=\"p\">}</span>\n<span class=\"nv\">!foo</span> <span class=\"p\">=</span> <span class=\"p\">!{</span><span class=\"nv\">!1</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">\"/\"</span><span class=\"nt\">&gt;&lt;/xsl:template&gt;</span>\n</code></pre></div></div>\n\n<div class=\"language-moonscript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">require</span><span class=\"w\"> </span><span class=\"s2\">\"my.module\"</span><span class=\"w\">\n\n</span><span class=\"n\">a_table</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"ss\">foo:</span><span class=\"w\"> </span><span class=\"s1\">'bar'</span><span class=\"w\">\n  </span><span class=\"ss\">interpolated:</span><span class=\"w\"> </span><span class=\"s2\">\"foo-</span><span class=\"si\">#{</span><span class=\"n\">other</span><span class=\"p\">.</span><span class=\"n\">stuff</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"w\">\n  </span><span class=\"ss\">\"string\":</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\">\n  </span><span class=\"ss\">do:</span><span class=\"w\"> </span><span class=\"s1\">'keyword'</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n\n</span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MyClass</span><span class=\"w\"> </span><span class=\"k\">extends</span><span class=\"w\"> </span><span class=\"nc\">SomeClass</span><span class=\"w\">\n  </span><span class=\"ss\">new:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"vi\">@init</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">arg2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s1\">'default'</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\">\n    </span><span class=\"vi\">@derived</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"vi\">@init</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\">\n    </span><span class=\"k\">super</span><span class=\"o\">!</span><span class=\"w\">\n\n  </span><span class=\"ss\">other:</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\">\n    </span><span class=\"vi\">@foo</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<div class=\"language-apache highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">AddDefaultCharset</span> UTF-8\n\n<span class=\"nc\">RewriteEngine</span> On\n\n<span class=\"c\"># Serve gzipped version if available and accepted</span>\n<span class=\"nc\">AddEncoding</span> x-gzip .gz\n<span class=\"nc\">RewriteCond</span> %{HTTP:Accept-Encoding} gzip\n<span class=\"nc\">RewriteCond</span> %{REQUEST_FILENAME}.gz -f\n<span class=\"nc\">RewriteRule</span> ^(.*)$ $1.gz [QSA,L]\n<span class=\"p\">&lt;</span><span class=\"nl\">FilesMatch</span><span class=\"sr\"> \\.css\\.gz$</span><span class=\"p\">&gt;\n</span>  <span class=\"nc\">ForceType</span> text/css\n  <span class=\"nc\">Header</span> <span class=\"ss\">append</span> Vary Accept-Encoding\n<span class=\"p\">&lt;/</span><span class=\"nl\">FilesMatch</span><span class=\"p\">&gt;\n&lt;</span><span class=\"nl\">FilesMatch</span><span class=\"sr\"> \\.js\\.gz$</span><span class=\"p\">&gt;\n</span>  <span class=\"nc\">ForceType</span> application/javascript\n  <span class=\"nc\">Header</span> <span class=\"ss\">append</span> Vary Accept-Encoding\n<span class=\"p\">&lt;/</span><span class=\"nl\">FilesMatch</span><span class=\"p\">&gt;\n&lt;</span><span class=\"nl\">FilesMatch</span><span class=\"sr\"> \\.html\\.gz$</span><span class=\"p\">&gt;\n</span>  <span class=\"nc\">ForceType</span> text/html\n  <span class=\"nc\">Header</span> <span class=\"ss\">append</span> Vary Accept-Encoding\n<span class=\"p\">&lt;/</span><span class=\"nl\">FilesMatch</span><span class=\"p\">&gt;\n</span></code></pre></div></div>\n\n<div class=\"language-prolog highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"ss\">plus</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">),</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"ss\">plus</span><span class=\"p\">(</span><span class=\"nv\">DA</span><span class=\"p\">,</span> <span class=\"nv\">DB</span><span class=\"p\">))</span>\n   <span class=\"o\">&lt;=</span> <span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">DA</span><span class=\"p\">)</span> <span class=\"ss\">and</span> <span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">B</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">DB</span><span class=\"p\">).</span>\n\n<span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"ss\">times</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">),</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"ss\">plus</span><span class=\"p\">(</span><span class=\"ss\">times</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span> <span class=\"nv\">DB</span><span class=\"p\">),</span> <span class=\"ss\">times</span><span class=\"p\">(</span><span class=\"nv\">DA</span><span class=\"p\">,</span> <span class=\"nv\">B</span><span class=\"p\">)))</span>\n   <span class=\"o\">&lt;=</span> <span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">DA</span><span class=\"p\">)</span> <span class=\"ss\">and</span> <span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">B</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">DB</span><span class=\"p\">).</span>\n\n<span class=\"ss\">equal</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">).</span>\n<span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">).</span>\n<span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">Y</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"ss\">not</span> <span class=\"ss\">equal</span><span class=\"p\">(</span><span class=\"nv\">Y</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">).</span>\n</code></pre></div></div>\n\n<div class=\"language-ocaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">(* Binary tree with leaves car­rying an integer. *)</span>\n<span class=\"k\">type</span> <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"nc\">Leaf</span> <span class=\"k\">of</span> <span class=\"kt\">int</span> <span class=\"o\">|</span> <span class=\"nc\">Node</span> <span class=\"k\">of</span> <span class=\"n\">tree</span> <span class=\"o\">*</span> <span class=\"n\">tree</span>\n\n<span class=\"k\">let</span> <span class=\"k\">rec</span> <span class=\"n\">exists_leaf</span> <span class=\"n\">test</span> <span class=\"n\">tree</span> <span class=\"o\">=</span>\n  <span class=\"k\">match</span> <span class=\"n\">tree</span> <span class=\"k\">with</span>\n  <span class=\"o\">|</span> <span class=\"nc\">Leaf</span> <span class=\"n\">v</span> <span class=\"o\">-&gt;</span> <span class=\"n\">test</span> <span class=\"n\">v</span>\n  <span class=\"o\">|</span> <span class=\"nc\">Node</span> <span class=\"p\">(</span><span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span>\n      <span class=\"n\">exists_leaf</span> <span class=\"n\">test</span> <span class=\"n\">left</span>\n      <span class=\"o\">||</span> <span class=\"n\">exists_leaf</span> <span class=\"n\">test</span> <span class=\"n\">right</span>\n\n<span class=\"k\">let</span> <span class=\"n\">has_even_leaf</span> <span class=\"n\">tree</span> <span class=\"o\">=</span>\n  <span class=\"n\">exists_leaf</span> <span class=\"p\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"o\">-&gt;</span> <span class=\"n\">n</span> <span class=\"ow\">mod</span> <span class=\"mi\">2</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"n\">tree</span>\n</code></pre></div></div>\n\n<div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">SELECT</span> <span class=\"o\">*</span> <span class=\"k\">FROM</span> <span class=\"nv\">`users`</span> <span class=\"k\">WHERE</span> <span class=\"nv\">`user`</span><span class=\"p\">.</span><span class=\"nv\">`id`</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n</code></pre></div></div>\n\n<div class=\"language-smalltalk highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">quadMultiply:</span> <span class=\"nv\">i1</span> <span class=\"nf\">and:</span> <span class=\"nv\">i2</span>\n    <span class=\"c\">\"This method multiplies the given numbers by each other\n    and the result by 4.\"</span>\n    <span class=\"p\">|</span><span class=\"nv\"> mul </span><span class=\"p\">|</span>\n    <span class=\"nv\">mul</span> <span class=\"o\">:=</span> <span class=\"nv\">i1</span> <span class=\"nf\">*</span> <span class=\"nv\">i2</span><span class=\"p\">.</span>\n    <span class=\"o\">^</span><span class=\"nv\">mul</span> <span class=\"nf\">*</span> <span class=\"m\">4</span>\n</code></pre></div></div>\n\n<div class=\"language-racket highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">#</span><span class=\"nv\">lang</span> <span class=\"nv\">racket</span>\n\n<span class=\"c1\">;; draw a graph of cos and deriv^3(cos)</span>\n<span class=\"p\">(</span><span class=\"k\">require</span> <span class=\"nv\">plot</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"k\">define</span> <span class=\"p\">((</span><span class=\"nf\">deriv</span> <span class=\"nv\">f</span><span class=\"p\">)</span> <span class=\"nv\">x</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"nb\">/</span> <span class=\"p\">(</span><span class=\"nb\">-</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"nv\">x</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"p\">(</span><span class=\"nb\">-</span> <span class=\"nv\">x</span> <span class=\"mf\">0.001</span><span class=\"p\">)))</span> <span class=\"mf\">0.001</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"k\">define</span> <span class=\"p\">(</span><span class=\"nf\">thrice</span> <span class=\"nv\">f</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"p\">(</span><span class=\"nf\">x</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"nv\">x</span><span class=\"p\">)))))</span>\n<span class=\"p\">(</span><span class=\"nf\">plot</span> <span class=\"p\">(</span><span class=\"nb\">list</span> <span class=\"p\">(</span><span class=\"nf\">function</span> <span class=\"p\">((</span><span class=\"nf\">thrice</span> <span class=\"nv\">deriv</span><span class=\"p\">)</span> <span class=\"nv\">sin</span><span class=\"p\">)</span> <span class=\"mi\">-5</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n            <span class=\"p\">(</span><span class=\"nf\">function</span> <span class=\"nv\">cos</span> <span class=\"mi\">-5</span> <span class=\"mi\">5</span> <span class=\"nt\">#:color</span> <span class=\"ss\">'blue</span><span class=\"p\">)))</span>\n\n<span class=\"c1\">;; Print the Greek alphabet</span>\n<span class=\"p\">(</span><span class=\"nf\">for</span> <span class=\"p\">([</span><span class=\"nf\">i</span> <span class=\"p\">(</span><span class=\"nf\">in-range</span> <span class=\"mi\">25</span><span class=\"p\">)])</span>\n  <span class=\"p\">(</span><span class=\"nb\">displayln</span>\n   <span class=\"p\">(</span><span class=\"nb\">integer-&gt;char</span>\n    <span class=\"p\">(</span><span class=\"nb\">+</span> <span class=\"nv\">i</span> <span class=\"p\">(</span><span class=\"nb\">char-&gt;integer</span> <span class=\"sc\">#\\u3B1</span><span class=\"p\">)))))</span>\n\n<span class=\"c1\">;; An echo server</span>\n<span class=\"p\">(</span><span class=\"k\">define</span> <span class=\"nv\">listener</span> <span class=\"p\">(</span><span class=\"k\">tcp-listen</span> <span class=\"mi\">12345</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"k\">let</span> <span class=\"nv\">echo-server</span> <span class=\"p\">()</span>\n  <span class=\"p\">(</span><span class=\"k\">define-values</span> <span class=\"p\">(</span><span class=\"nf\">in</span> <span class=\"nv\">out</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">tcp-accept</span> <span class=\"nv\">listener</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"nb\">thread</span> <span class=\"p\">(</span><span class=\"k\">λ</span> <span class=\"p\">()</span>\n             <span class=\"p\">(</span><span class=\"nf\">copy-port</span> <span class=\"nv\">in</span> <span class=\"nv\">out</span><span class=\"p\">)</span>\n             <span class=\"p\">(</span><span class=\"nb\">close-output-port</span> <span class=\"nv\">out</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"nf\">echo-server</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<div class=\"language-puppet highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">service</span> <span class=\"p\">{</span> <span class=\"s1\">'ntp'</span><span class=\"p\">:</span>\n  <span class=\"py\">name</span>      <span class=\"p\">=&gt;</span> <span class=\"nv\">$service_name</span><span class=\"p\">,</span>\n  <span class=\"py\">ensure</span>    <span class=\"p\">=&gt;</span> <span class=\"n\">running</span><span class=\"p\">,</span>\n  <span class=\"py\">enable</span>    <span class=\"p\">=&gt;</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"kp\">subscribe</span> <span class=\"p\">=&gt;</span> <span class=\"nc\">File</span><span class=\"p\">[</span><span class=\"s1\">'ntp.conf'</span><span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-dart highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n  <span class=\"kd\">var</span> <span class=\"n\">collection</span><span class=\"o\">=[</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">];</span>\n  <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kd\">var</span> <span class=\"n\">a</span> <span class=\"k\">in</span> <span class=\"n\">collection</span><span class=\"o\">){</span>\n    <span class=\"n\">print</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">);</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-tcl highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">proc</span> cross_sum <span class=\"p\">{</span>s<span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"k\">expr</span> <span class=\"p\">[</span><span class=\"nb\">join</span> <span class=\"p\">[</span><span class=\"nb\">split</span> <span class=\"nv\">$s</span> <span class=\"s2\">\"\"</span><span class=\"p\">]</span> +<span class=\"p\">]}</span>\n</code></pre></div></div>\n\n<div class=\"language-csharp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// reverse byte order (16-bit)</span>\n<span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"n\">UInt16</span> <span class=\"nf\">ReverseBytes</span><span class=\"p\">(</span><span class=\"n\">UInt16</span> <span class=\"k\">value</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">UInt16</span><span class=\"p\">)((</span><span class=\"k\">value</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xFFU</span><span class=\"p\">)</span> <span class=\"p\">&lt;&lt;</span> <span class=\"m\">8</span> <span class=\"p\">|</span> <span class=\"p\">(</span><span class=\"k\">value</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xFF00U</span><span class=\"p\">)</span> <span class=\"p\">&gt;&gt;</span> <span class=\"m\">8</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-vb highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">Private</span> <span class=\"k\">Sub</span> <span class=\"nf\">Form_Load</span><span class=\"p\">()</span>\n    <span class=\"c1\">' Execute a simple message box that says \"Hello, World!\"</span>\n    <span class=\"n\">MsgBox</span> <span class=\"s\">\"Hello, World!\"</span>\n<span class=\"k\">End</span> <span class=\"k\">Sub</span>\n</code></pre></div></div>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>    <span class=\"c1\"># write Fibonacci series up to n\n</span>    <span class=\"s\">\"\"\"Print a Fibonacci series up to n.\"\"\"</span>\n    <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n    <span class=\"k\">while</span> <span class=\"n\">a</span> <span class=\"o\">&lt;</span> <span class=\"n\">n</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span> <span class=\"n\">a</span><span class=\"p\">,</span>\n        <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n</code></pre></div></div>\n\n<div class=\"language-perl highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">#!/usr/bin/env perl</span>\n<span class=\"k\">use</span> <span class=\"nv\">warnings</span><span class=\"p\">;</span>\n<span class=\"k\">print</span> <span class=\"s\">\"a: \"</span><span class=\"p\">;</span>\n<span class=\"k\">my</span> <span class=\"nv\">$a</span> <span class=\"o\">=</span> <span class=\"s\">\"foo\"</span><span class=\"p\">;</span>\n<span class=\"k\">print</span> <span class=\"nv\">$a</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<div class=\"language-markdown highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Markdown has cool <span class=\"p\">[</span><span class=\"nv\">reference links</span><span class=\"p\">][</span><span class=\"ss\">ref 1</span><span class=\"p\">]</span>\nand <span class=\"p\">[</span><span class=\"nv\">regular links too</span><span class=\"p\">](</span><span class=\"sx\">https://example.com</span><span class=\"p\">)</span>\n\n<span class=\"p\">[</span><span class=\"ss\">ref 1</span><span class=\"p\">]:</span> <span class=\"sx\">https://example.com</span>\n</code></pre></div></div>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"pi\">-</span> <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">set PHP-FPM parameters</span>\n  <span class=\"na\">lineinfile</span><span class=\"pi\">:</span>\n    <span class=\"na\">dest</span><span class=\"pi\">:</span> <span class=\"s\">/etc/php-fpm.conf</span>\n    <span class=\"na\">regexp</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">^\"</span>\n    <span class=\"na\">insertafter</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">^;\"</span>\n    <span class=\"na\">line</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"nv\"> </span><span class=\"s\">=</span><span class=\"nv\"> </span><span class=\"s\">\"</span>\n  <span class=\"na\">with_items</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"pi\">{</span> <span class=\"nv\">param</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">error_log'</span><span class=\"pi\">,</span> <span class=\"nv\">value</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">/var/log/php-fpm/error.log'</span> <span class=\"pi\">}</span>\n    <span class=\"pi\">-</span> <span class=\"pi\">{</span> <span class=\"nv\">param</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">log_level'</span><span class=\"pi\">,</span> <span class=\"nv\">value</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">error'</span> <span class=\"pi\">}</span>\n    <span class=\"pi\">-</span> <span class=\"pi\">{</span> <span class=\"nv\">param</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">emergency_restart_threshold'</span><span class=\"pi\">,</span> <span class=\"nv\">value</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">10'</span> <span class=\"pi\">}</span>\n</code></pre></div></div>","excerpt":"Code highlighting demo, powered by Rouge. More info about code highlighting can be found at Jekyll’s documentation.","languages":null,"categories":["old","note"],"tags":["miscellaneous"]},{"title":"Markdown Features Test","permalink":"//markdown-features-test.html","link":"//markdown-features-test.html","date":"2014-06-06T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<h2 id=\"indented-code-blocks\">Indented Code Blocks</h2>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>def show\n  @widget = Widget(params[:id])\n  respond_to do |format|\n    format.html # show.html.erb\n    format.json { render json: @widget }\n  end\nend\n</code></pre></div></div>\n\n<h2 id=\"liquid-tag-with-linenos-support\">Liquid Tag with <code class=\"highlighter-rouge\">linenos</code> Support</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"code\"><pre><span class=\"k\">def</span> <span class=\"nf\">show</span>\n  <span class=\"vi\">@widget</span> <span class=\"o\">=</span> <span class=\"no\">Widget</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"ss\">:id</span><span class=\"p\">])</span>\n  <span class=\"n\">respond_to</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"nb\">format</span><span class=\"o\">|</span>\n    <span class=\"nb\">format</span><span class=\"p\">.</span><span class=\"nf\">html</span> <span class=\"c1\"># show.html.erb</span>\n    <span class=\"nb\">format</span><span class=\"p\">.</span><span class=\"nf\">json</span> <span class=\"p\">{</span> <span class=\"n\">render</span> <span class=\"ss\">json: </span><span class=\"vi\">@widget</span> <span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span></pre></td></tr></tbody></table></code></pre></figure>\n\n<h2 id=\"gfm-code-blocks-fenced_code_blocks\">GFM Code Blocks (<code class=\"highlighter-rouge\">fenced_code_blocks</code>)</h2>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">/* Background color function */</span>\n<span class=\"nc\">.code-bg</span> <span class=\"o\">(</span><span class=\"k\">@v</span><span class=\"p\">)</span> <span class=\"n\">when</span> <span class=\"p\">(</span><span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"err\">&gt;=</span> <span class=\"m\">50%</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">@return-bg</span><span class=\"p\">:</span> <span class=\"nb\">mix</span><span class=\"p\">(</span><span class=\"m\">#000</span><span class=\"p\">,</span> <span class=\"n\">lighten</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"m\">30%</span><span class=\"p\">),</span> <span class=\"m\">10%</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"nc\">.code-bg</span> <span class=\"o\">(</span><span class=\"k\">@v</span><span class=\"p\">)</span> <span class=\"n\">when</span> <span class=\"p\">(</span><span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"err\">&lt;</span> <span class=\"m\">50%</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">@return-bg</span><span class=\"p\">:</span> <span class=\"nb\">mix</span><span class=\"p\">(</span><span class=\"m\">#fff</span><span class=\"p\">,</span> <span class=\"n\">darken</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"m\">10%</span><span class=\"p\">),</span> <span class=\"m\">70%</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h3 id=\"smartypants\">SmartyPants</h3>\n\n<p>“Aha! What’s up, man?” – Jony said.</p>\n\n<h2 id=\"tables\">Tables</h2>\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Upvotes</th>\n      <th>Downvotes</th>\n      <th>Abstentions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Alice</td>\n      <td>10</td>\n      <td>11</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <td>Bob</td>\n      <td>4</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <td>Charlie</td>\n      <td>7</td>\n      <td>9</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <td>Totals</td>\n      <td>21</td>\n      <td>23</td>\n      <td>7</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"intra-emphasis\">Intra-emphasis</h2>\n\n<p>foo_bar_baz</p>\n\n<h2 id=\"auto-link\">Auto-link</h2>\n\n<p>https://sparanoid.com/</p>\n\n<h2 id=\"strikethroughs\">Strikethroughs</h2>\n\n<p>This is <del>good</del> bad.</p>\n\n<h2 id=\"space-after-headers\">Space after Headers</h2>\n\n<p>###This is not a header.</p>\n\n<h2 id=\"superscripts\">Superscripts</h2>\n\n<p>This is the 2^(nd) time.</p>\n\n<h2 id=\"footnotes\">Footnotes</h2>\n\n<p>This<sup id=\"fnref:1\"><a href=\"#fn:1\" class=\"footnote\">1</a></sup> is<sup id=\"fnref:2\"><a href=\"#fn:2\" class=\"footnote\">2</a></sup> a sentence<sup id=\"fnref:3\"><a href=\"#fn:3\" class=\"footnote\">3</a></sup>.</p>\n\n<h2 id=\"id-日本語タイトル\">ID 日本語タイトル</h2>\n\n<p>Expected id should be <code class=\"highlighter-rouge\">id-ri-ben-yu-taitoru</code>.</p>\n\n<h2 id=\"id-中文標題\">ID 中文標題</h2>\n\n<p>Expected id should be <code class=\"highlighter-rouge\">id-zhong-wen-biao-ti</code>.</p>\n\n<div class=\"footnotes\">\n  <ol>\n    <li id=\"fn:1\">\n      <p>Lorem lean startup ipsum <strong>product market fit customer development</strong> acquihire technical cofounder. User engagement A/B testing shrink a market venture capital pitch deck. Social bookmarking group buying <a href=\"#\">crowded market</a> pivot onboarding freemium prototype ping pong. Early stage disruptive ecosystem community outreach dynamic location based strategic investor. <a href=\"#fnref:1\" class=\"reversefootnote\">&#8617;&#xfe0e;</a></p>\n    </li>\n    <li id=\"fn:2\">\n      <p><a href=\"https://web.archive.org/web/20160425094356/http://blog.readability.com:80/2012/06/announcement/\">An Important Announcement</a> by Richard Ziade at Readability <a href=\"#fnref:2\" class=\"reversefootnote\">&#8617;&#xfe0e;</a></p>\n    </li>\n    <li id=\"fn:3\">\n      <p>Good afterble constanoon, this sweet hongi is as bung as a stuffed morepork. Mean while, in the marae, Dr Ropata and Hairy Maclary from Donaldson’s Dairy were up to no good with a bunch of bloody troties. <a href=\"#fnref:3\" class=\"reversefootnote\">&#8617;&#xfe0e;</a></p>\n    </li>\n  </ol>\n</div>","excerpt":"Indented Code Blocks","languages":null,"categories":["old","note"],"tags":["miscellaneous"]},{"title":"Markup Example","permalink":"//markup-example.html","link":"//markup-example.html","date":"2014-06-05T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>Lorem lean startup ipsum <strong>product market fit customer development</strong> acquihire technical cofounder. User engagement A/B testing shrink a market venture capital pitch deck. Social bookmarking group buying <a href=\"#\">crowded market</a> pivot onboarding freemium prototype ping pong. Early stage disruptive ecosystem community outreach dynamic location based strategic investor.</p>\n\n<blockquote>\n  <p>Two days ago the Chinese website <a href=\"https://www.taobao.com/\">Taobao</a> held a discount promotion to celebrate what’s known as “double sticks day” in China. In a single 24hr period, they conducted 19bn RMB (US$3.06bn) of business.</p>\n  <footer>\n    <cite><a href=\"https://web.archive.org/web/20150223182728/http://westiseast.co.uk:80/blog/taobao-sales-19-billion-bonanza/\">Chris West</a></cite>\n  </footer>\n</blockquote>\n\n<blockquote>\n  <p>Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n</blockquote>\n\n<p>Good afterble constanoon, this sweet hongi is as bung as a stuffed morepork. Mean while, in the marae, Dr Ropata and Hairy Maclary from Donaldson’s Dairy were up to no good with a bunch of bloody troties.</p>\n\n<h2 id=\"inline-html-elements\">Inline HTML elements</h2>\n\n<p>HTML defines a long list of available inline tags, a complete list of which can be found on the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\">Mozilla Developer Network</a>.</p>\n\n<ul>\n  <li><strong>To bold text</strong>, use <code class=\"highlighter-rouge\">&lt;strong&gt;</code>.</li>\n  <li><em>To italicize text</em>, use <code class=\"highlighter-rouge\">&lt;em&gt;</code>.</li>\n  <li>Abbreviations, like <abbr title=\"HyperText Markup Langage\">HTML</abbr> should use <code class=\"highlighter-rouge\">&lt;abbr&gt;</code>, with an optional <code class=\"highlighter-rouge\">title</code> attribute for the full phrase.</li>\n  <li>Citations, like <cite>— Tunghsiao Liu &amp; Mark otto</cite>, should use <code class=\"highlighter-rouge\">&lt;cite&gt;</code>.</li>\n  <li><del>Deleted</del> text should use <code class=\"highlighter-rouge\">&lt;del&gt;</code> and <ins>inserted</ins> text should use <code class=\"highlighter-rouge\">&lt;ins&gt;</code>.</li>\n  <li>Superscript <sup>text</sup> uses <code class=\"highlighter-rouge\">&lt;sup&gt;</code> and subscript <sub>text</sub> uses <code class=\"highlighter-rouge\">&lt;sub&gt;</code>.</li>\n</ul>\n\n<hr />\n\n<ul>\n  <li>With the exception of Nietzsche, no other madman has contributed so much to human sanity as has Louis Althusser. He is mentioned twice in the Encyclopaedia Britannica as someone’s teacher. There could be no greater lapse: for two important decades (the 60s and the 70s), Althusser was at the eye of all the important cultural storms. He fathered quite a few of them.</li>\n  <li>This newly-found obscurity forces me to summarize his work before suggesting a few (minor) modifications to it.\n    <ul>\n      <li>Society consists of practices: economic, political and ideological.\n        <ul>\n          <li>Althusser defines a practice as:</li>\n          <li>“Any process of transformation of a determinate product, affected by a determinate human labour, using determinate means (of production)”\n            <ul>\n              <li>The economic practice (the historically specific mode of production) transforms raw materials to finished products using human labour and other means of production, all organized within defined webs of inter-relations. The political practice does the same with social relations as the raw materials. Finally, ideology is the transformation of the way that a subject relates to his real life conditions of existence.\n                <ul>\n                  <li>This is a rejection of the mechanistic worldview (replete with bases and superstructures). It is a rejection of the Marxist theorization of ideology. It is a rejection of the Hegelian fascist “social totality”. It is a dynamic, revealing, modern day model.</li>\n                  <li>“The objective internal reference … the system of questions commanding the answers given”</li>\n                </ul>\n              </li>\n              <li>Subjects to what? The answer: to the material practices of the ideology. This (the creation of subjects) is done by the acts of “hailing” or “interpellation”. These are acts of attracting attention (hailing) , forcing the individuals to generate meaning (interpretation) and making them participate in the practice.\n                <ul>\n                  <li>Subjects to what? The answer: to the material practices of the ideology. This (the creation of subjects) is done by the acts of “hailing” or “interpellation”. These are acts of attracting attention (hailing) , forcing the individuals to generate meaning (interpretation) and making them participate in the practice.</li>\n                  <li>What happens in a pluralistic environment rich in competing ideologies?\n                    <ul>\n                      <li>Clarifying the HOW, though, does not shed light on the WHY.\n                        <ul>\n                          <li>is the fact that in the new one, the second text is articulated with the lapses in the first text … (Marx measures) the problematic contained</li>\n                        </ul>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              </li>\n              <li>Ideology is a practice with lived and material dimensions. It has costumes, rituals, behaviour patterns, ways of thinking. The State employs Ideological Apparatuses (ISAs) to reproduce ideology through practices and productions: (organized) religion, the education system, the family, (organized) politics, the media, the industries of culture.</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>These theoretical tools were widely used to analyze the Advertising and the film industries.</li>\n</ul>\n\n<ol>\n  <li>Ordered list</li>\n  <li>Ordered list\n    <ol>\n      <li>Ordered list\n        <ol>\n          <li>Ordered list</li>\n          <li>Ordered list\n            <ol>\n              <li>Ordered list\n                <ol>\n                  <li>Ordered list</li>\n                  <li>Ordered list</li>\n                </ol>\n              </li>\n              <li>Ordered list\n                <ol>\n                  <li>Ordered list</li>\n                </ol>\n              </li>\n              <li>Ordered list</li>\n            </ol>\n          </li>\n        </ol>\n      </li>\n      <li>Ordered list\n        <ol>\n          <li>Ordered list</li>\n          <li>Ordered list</li>\n        </ol>\n      </li>\n    </ol>\n  </li>\n  <li>Ordered list</li>\n</ol>\n\n<hr />\n\n<h2 id=\"this-should-be-replaced\">“This should be replaced.”</h2>\n\n<p>“This should be replaced.”</p>\n\n<p>This is a normal paragraph.</p>\n\n<h2 id=\"this-should-be-replaced-1\">‘This should be replaced.’</h2>\n\n<p>‘This should be replaced.’</p>\n\n<p>This is a normal paragraph.</p>\n\n<h2 id=\"this-should-be-replaced-2\">「This should be replaced.」</h2>\n\n<p>「This should be replaced.」</p>\n\n<p>This is a normal paragraph.</p>\n\n<h2 id=\"this-should-be-replaced-3\">『This should be replaced.』</h2>\n\n<p>『This should be replaced.』</p>\n\n<p>This is a normal paragraph.</p>\n\n<h2 id=\"this-should-be-replaced-4\">（This should be replaced.）</h2>\n\n<p>（This should be replaced.）</p>\n\n<p>This is a normal paragraph.</p>\n\n<hr />\n\n<p>Most of these elements are styled by browsers with few modifications on our part.</p>\n\n<p>Maui and his rough as guts piece of pounamu, what a stink buzz. Bro, quater-acre patches are really naff good with bung mates, aye. You have no idea how beached as our random kais were aye. Every time I see those beautiful lengths of number 8 wire it’s like Castle Hill all over again aye, do you happen to have a bucket or a hose bro?</p>\n\n<h2 id=\"h2-headings\">H2 Headings</h2>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<h3 id=\"h3-headings\">H3 Headings</h3>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<h4 id=\"h4-headings\">H4 Headings</h4>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<h5 id=\"h5-headings\">H5 Headings</h5>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<h6 id=\"h6-headings\">H6 Headings</h6>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<hr />\n\n<p>He was alone then; when he sat in that same chair his wife now sits in, and I shared with him the positive result to his HIV test. Though he seemed disinterested, vaguely detached, he had obviously heard of HIV before. His chart from the local clinic indicated a previous history of and treatment for anal gonorrhea, two acute cases of syphilis in the past three years, and a urinary tract infection last month. His only listed sexual contact, his wife. Who, strangely enough, only tested positive for one of the syphilis infections.</p>\n\n<p>“Mistake, this! I am married, not a giver of ass.”</p>\n\n<p>Giver of ass? That’s one for the archive, I think.</p>\n\n<p>Unwilling to engage his obvious denials, I ignore the comment and instead explain that due to a higher than acceptable potential of a false positive result, we won’t consider his oral test as confirmatory until the more accurate blood analysis is in.</p>\n\n<p>“I no understand”, he says to the room in general.</p>\n\n<p>His annoyance is obvious. Abrasively, he offers me his exposed forearm. This, I assume, is my cue to draw his blood. Ignoring the indignant anger beginning to rise, I tighten my jaw, then swab the fat vein with betadine, working the cool, brown liquid off in concentric circles, using strong medicinal smelling alcohol. I use the betadine, as most of these men work in the mines, and dirt three layers thick on exposed skin is the norm. As the first tube in the vacationer fills with blood, he asks,</p>\n\n<p>“So how I get this thing?”</p>\n\n<p>Ah, I see we are going to play the circuitous dance of ignorance. Sounding just a little too clinical, I begin the HIV 101 mantra.</p>\n\n<p>“Well, people acquire HIV through certain types of sex with an infected person, through sharing needles with an infected person, and sometimes through a blood transfusion. Have you ever had a blood transfusion, sir?”</p>\n\n<p>I take the dismissive wave of his hand as a no to the transfusion question. I don’t make a great attempt to navigate a comfort zone here; instinct and experience telling me he has already set the script of what is to follow.</p>\n\n<p>“She is fucking other cocks my whore devil wife”?\nBingo! A narrative that over the next six weeks I will hear from several other men as well.</p>\n\n<p>“These whores, all they want is the cock!”\nCareful Skippy, you really aren’t as convincing as you think you are.</p>\n\n<blockquote>\n  <p>\n    “She is fucking other cocks my whore devil wife”?\n    <br />\n    Bingo! A narrative that over the next six weeks I will hear from several other men as well.\n  </p>\n\n  <p>\n    “These whores, all they want is the cock!”\n    <br />\n    Careful Skippy, you really aren’t as convincing as you think you are.\n  </p>\n\n  <footer>\n    <cite>from <a href=\"https://medium.com/absurdist/a-world-away-c2b692bd808e\">A World Away</a> by alto</cite>\n  </footer>\n</blockquote>\n\n<details>\n  <summary>Supported Fonts</summary>\n  <ul>\n    <li><a href=\"https://www.microsoft.com/typography/otspec/features_fj.htm#qwid\">Microsoft Registered features - qwid</a></li>\n    <li><a href=\"https://typekit.com/fonts/kozuka-mincho-pr6n\">Kozuka Mincho Pr6n</a></li>\n  </ul>\n</details>\n\n<h2 id=\"chinese-paragraph\">Chinese Paragraph</h2>\n\n<p lang=\"zh-cn\">「名词成灾」的流行病里，灾情最严重的该是所谓「科学至上」（scientism）。在现代的工业社会里，科学早成显贵，科技更是骄子，所以知识分子的口头与笔下，有意无意，总爱用一些「学术化」的抽象名词，好显得客观而精确。有人称之为「伪术语」（pseudo-jargon）。例如：明明是 first step，却要说成 initial phase：明明是 letter，却要说成 communication，都属此类。</p>\n\n<h2 id=\"japanese-paragraph\">Japanese Paragraph</h2>\n\n<p lang=\"ja\">『雪国』の主な舞台は、上越国境の清水トンネルを抜けた湯沢温泉であるが、この作品も『伊豆の踊子』同様に、川端康成の旅の出会いから生まれたもので、雪中の火事も実際に起ったことだと川端は語っている。川端は作品内で故意に地名を隠しているが、1934 年（昭和 9 年）6 月 13 日より 1937 年まで新潟県湯沢町の高半旅館（現：高半ホテル）に逗留していたことを随筆『「雪国」の旅』で述べている。</p>\n\n<div class=\"language-markdown highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gu\">## H2 Heading</span>\n<span class=\"gu\">### H3 Heading</span>\n<span class=\"gu\">#### H4 Heading</span>\n<span class=\"gu\">##### H5 Heading</span>\n<span class=\"gu\">###### H6 Heading</span>\n</code></pre></div></div>\n\n<h2 id=\"newsletters-signup-form\">Newsletters Signup Form</h2>\n\n<form action=\"//sparanoid.us2.list-manage.com/subscribe/post?u=eef500b1fe3fe595f03a27605&amp;id=7bbabe95a9\" method=\"post\">\n  <input name=\"cm-uykhir-uykhir\" type=\"email\" placeholder=\"Your Email\" required=\"\" />\n</form>","excerpt":"Lorem lean startup ipsum product market fit customer development acquihire technical cofounder. User engagement A/B testing shrink a market venture capital pitch deck. Social bookmarking group buying crowded market pivot onboarding freemium prototype ping pong. Early stage disruptive ecosystem community outreach dynamic location based strategic investor.","languages":null,"categories":["old","note"],"tags":["miscellaneous"]},{"title":"Custom HTML Markups","permalink":"//custom-html-markups.html","link":"//custom-html-markups.html","date":"2014-06-01T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<h2 id=\"note-store-and-download\"><code class=\"highlighter-rouge\">.note</code>, <code class=\"highlighter-rouge\">.store</code>, and <code class=\"highlighter-rouge\">.download</code></h2>\n\n<p>A paragraph block with a thin border line.</p>\n\n<h3 id=\"usage\">Usage</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">[</span><span class=\"nv\">Download</span><span class=\"p\">](</span><span class=\"sx\">download</span><span class=\"p\">)</span> it from GitHub\n{: .download}\n\nLove this plugin? please consider <span class=\"p\">[</span><span class=\"nv\">buying me a cup of coffee</span><span class=\"p\">](</span><span class=\"sx\">donate</span><span class=\"p\">)</span>.\n{: .store}\n</code></pre></div></div>\n\n<h3 id=\"example\">Example</h3>\n\n<p class=\"download\"><a href=\"https://github.com/sparanoid/sparanoid.com/\">Download</a> it from GitHub</p>\n\n<p class=\"store\">Love this plugin? please consider buying me a cup of coffee.</p>\n\n<h2 id=\"largetype\"><code class=\"highlighter-rouge\">.largetype</code></h2>\n\n<p>Make normal paragraph text large enough.</p>\n\n<h3 id=\"usage-1\">Usage</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">[</span><span class=\"nv\">PayPal</span><span class=\"p\">](</span><span class=\"sx\">donate</span><span class=\"p\">)</span>\n{: .largetype}\n</code></pre></div></div>\n\n<h3 id=\"example-1\">Example</h3>\n\n<p class=\"largetype\"><a href=\"https://sparanoid.com/donate/\">PayPal</a></p>\n\n<h2 id=\"browser\"><code class=\"highlighter-rouge\">.browser</code></h2>\n\n<p>A simple browser frame using pure CSS.</p>\n\n<h3 id=\"usage-2\">Usage</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>\n{: .browser}\n</code></pre></div></div>\n\n<h3 id=\"example-2\">Example</h3>\n\n<p class=\"browser\"><img src=\"https://d349cztnlupsuf.cloudfront.net/delicious.com.png\" alt=\"Delicious Preview\" class=\"no-lightense\" /></p>\n\n<h2 id=\"lightense-images\"><a href=\"https://sparanoid.com/work/lightense-images/\">Lightense Images</a></h2>\n\n<p>A simple library inspired by <a href=\"https://github.com/tholman\">Tim Holman</a> to view large images up close using simple mouse interaction, and the full screen.</p>\n\n<h3 id=\"usage-3\">Usage</h3>\n\n<p>Add the following setting to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>plugin: lightense\n</code></pre></div></div>\n\n<p>Markdown markup:</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/photo.jpg</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>Lightense Images is activated globally by default, if you want to disable this effect for specific image, you can simply apply <code class=\"highlighter-rouge\">.no-lightense</code> CSS class to your image or <code class=\"highlighter-rouge\">&lt;img&gt;</code>:</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .no-lightense}\n</code></pre></div></div>\n\n<p>Please note that if you’re using HTML markup, you should wrap your images into a <code class=\"highlighter-rouge\">&lt;p&gt;</code> container.</p>\n\n<h3 id=\"example-3\">Example</h3>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/moonstruck-princess-ext-red.jpg\" alt=\"Moonstruck Princess Extended - Red\" /></p>\n\n<h2 id=\"image-sizes\">Image Sizes</h2>\n\n<p>There’re different size helpers for images. They’re available using the following CSS classes:</p>\n\n<h3 id=\"small-size\">Small Size</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .size-small}\n</code></pre></div></div>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/moonstruck-princess-ext-orange.jpg\" alt=\"Moonstruck Princess Extended - orange\" class=\"size-small\" /></p>\n\n<h3 id=\"medium-size\">Medium Size</h3>\n\n<p>Medium size is the default size of images, so you don’t need additional CSS class for it.</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/moonstruck-princess-ext-yellow.jpg\" alt=\"Moonstruck Princess Extended - Yellow\" /></p>\n\n<h3 id=\"large-size\">Large Size</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .size-large}\n</code></pre></div></div>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/moonstruck-princess-ext-green.jpg\" alt=\"Moonstruck Princess Extended - Green\" class=\"size-large\" /></p>\n\n<h3 id=\"aligned-images\">Aligned Images</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .size-left}\n\n<span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .size-right}\n</code></pre></div></div>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/moonstruck-princess-ext-blue.jpg\" alt=\"Moonstruck Princess Extended - Blue\" class=\"size-left\" /></p>\n\n<p>Aligned images are smaller images beside text, you can just apply <code class=\"highlighter-rouge\">.size-left</code> or <code class=\"highlighter-rouge\">.size-right</code> to your images and nothing special markup required. However that aligned images will be responded to normal large size for small desktops or mobile devices.</p>\n\n<h3 id=\"small-images\">Small Images</h3>\n\n<p>Useful for images smaller than container width.</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .no-resize}\n</code></pre></div></div>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/who-can-run.png\" alt=\"Run?\" class=\"no-resize\" /></p>\n\n<h3 id=\"small-images-center\">Small Images (center)</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .no-resize.center}\n</code></pre></div></div>\n\n<p><img src=\"https://d349cztnlupsuf.cloudfront.net/who-can-run.png\" alt=\"Run?\" class=\"no-resize center\" /></p>","excerpt":".note, .store, and .download","languages":null,"categories":["old","note"],"tags":["curtana"]},{"title":"Custom Color Scheme","permalink":"//custom-color-scheme.html","link":"//custom-color-scheme.html","date":"2014-05-01T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>This is an example how to change your post color scheme for specific posts. You can simply add the following variables to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>scheme-text: \"#0029ff\"\nscheme-link: \"#ff00b4\"\nscheme-hover: \"#ff00b4\"\nscheme-code: \"#ad00ff\"\nscheme-bg: \"#00ebff\"\nscheme-hero-text: \"#00ebff\"\nscheme-hero-link: \"#00ebff\"\nscheme-hero-bg: \"#0029ff\"\n</code></pre></div></div>\n\n<p>You can also ignore other variables if you only want to change the background:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>scheme-bg: \"#00ebff\"\n</code></pre></div></div>","excerpt":"This is an example how to change your post color scheme for specific posts. You can simply add the following variables to your post front-matter field:","languages":null,"categories":["old","note"],"tags":["curtana"]},{"title":"Unique Post Styling via Custom CSS","permalink":"//custom-css.html","link":"//custom-css.html","date":"2014-04-01T00:00:00-07:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>This is an example how to change your post styling via CSS. You can simply add the <code class=\"highlighter-rouge\">css</code> option to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>scheme-text: \"#000\"\nscheme-link: \"#a73300\"\nscheme-hover: \"#ff4e00\"\nscheme-code: \"#a73300\"\ncss: |\n  body {\n    background-image: linear-gradient(to bottom, #fff500, #ff8f00);\n  }\n</code></pre></div></div>\n\n<p>Please note that syntax highligting may look ugly with custom background color.</p>","excerpt":"This is an example how to change your post styling via CSS. You can simply add the css option to your post front-matter field:","languages":null,"categories":["old","note"],"tags":["curtana"]},{"title":"External Link Post","permalink":"//external-link-post.html","link":"//external-link-post.html","date":"2014-02-01T00:00:00-08:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>This is an example of Tumblr-like external link post. You can simply add the following setting to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">link</span><span class=\"pi\">:</span> <span class=\"s\">https://sparanoid.com/</span>\n</code></pre></div></div>","excerpt":"This is an example of Tumblr-like external link post. You can simply add the following setting to your post front-matter field:","languages":null,"categories":["old","note"],"tags":["curtana"]},{"title":"Custom Heading Image","permalink":"//custom-heading-image.html","link":"//custom-heading-image.html","date":"2014-02-01T00:00:00-08:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>This is an example of custom post heading image. You can simply add the following setting to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">heading-img</span><span class=\"pi\">:</span> <span class=\"s\">svg/heading-image.svg</span>\n<span class=\"na\">heading-img-local</span><span class=\"pi\">:</span> <span class=\"no\">true</span>\n<span class=\"na\">heading-img-width</span><span class=\"pi\">:</span> <span class=\"s\">400</span>\n</code></pre></div></div>\n\n<blockquote>\n  <p>In Almace Scaffolding v1.1.0, the original <code class=\"highlighter-rouge\">svg-headline*</code>, and <code class=\"highlighter-rouge\">img-headline*</code> options are deprecated.</p>\n</blockquote>\n\n<dl>\n  <dt><code class=\"highlighter-rouge\">heading-img</code></dt>\n  <dd>Heading image filename, if a relative URL (non-external URL) is provided, the file will be prefixed with <code class=\"highlighter-rouge\">site.file</code>.</dd>\n  <dt><code class=\"highlighter-rouge\">heading-img-local</code></dt>\n  <dd>To avoid relative URL prefixed by <code class=\"highlighter-rouge\">site.file</code>, you can set this option to <code class=\"highlighter-rouge\">true</code> to prefix it with <code class=\"highlighter-rouge\">amsf_user_assets</code>, then you can store your images in <code class=\"highlighter-rouge\">_app/assets/</code>.</dd>\n  <dt><code class=\"highlighter-rouge\">heading-img-width</code></dt>\n  <dd>Set the width of your heading image. The value will be converted to viewport unit automatically. ie. <code class=\"highlighter-rouge\">heading-img-width: 400</code> will be converted to <code class=\"highlighter-rouge\">width: 40vw</code>;</dd>\n</dl>\n\n<blockquote>\n  <p><strong>Pro Tips</strong>: Keep a <code class=\"highlighter-rouge\">&lt;title&gt;</code> tag for your SVG can help Safari generate correct post title for its Reader mode:</p>\n</blockquote>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;svg</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.w3.org/2000/svg\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;title&gt;</span>Cool Article<span class=\"nt\">&lt;/title&gt;</span>\n…\n</code></pre></div></div>","excerpt":"This is an example of custom post heading image. You can simply add the following setting to your post front-matter field:","languages":null,"categories":["old","note"],"tags":["curtana"]},{"title":"Custom Heading Background","permalink":"//custom-heading-background.html","link":"//custom-heading-background.html","date":"2014-02-01T00:00:00-08:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<p>This is an example of custom heading background. You can simply add the following setting to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">heading-bg</span><span class=\"pi\">:</span> <span class=\"s\">img/heading-background.jpg</span>\n<span class=\"na\">heading-bg-local</span><span class=\"pi\">:</span> <span class=\"no\">true</span>\n<span class=\"na\">heading-bg-color</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">#8141b1\"</span>\n<span class=\"na\">heading-bg-size</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">100px</span><span class=\"nv\"> </span><span class=\"s\">100px\"</span>\n<span class=\"na\">heading-bg-position</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">center</span><span class=\"nv\"> </span><span class=\"s\">bottom\"</span>\n<span class=\"na\">heading-bg-repeat</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">repeat\"</span>\n<span class=\"na\">heading-bg-text</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">#fff\"</span>\n</code></pre></div></div>\n\n<dl>\n  <dt><code class=\"highlighter-rouge\">heading-bg</code></dt>\n  <dd>Background image filename, if a relative URL (non-external URL) is provided, the file will be prefixed with <code class=\"highlighter-rouge\">site.file</code>.</dd>\n  <dt><code class=\"highlighter-rouge\">heading-bg-local</code></dt>\n  <dd>To avoid relative URL prefixed by <code class=\"highlighter-rouge\">site.file</code>, you can set this option to <code class=\"highlighter-rouge\">true</code> to prefix it with <code class=\"highlighter-rouge\">amsf_user_assets</code>, then you can store your images in <code class=\"highlighter-rouge\">_app/assets/</code>.</dd>\n  <dt><code class=\"highlighter-rouge\">heading-bg-color</code></dt>\n  <dd>Background color, recommend setting its value matches your image color tone.</dd>\n  <dt><code class=\"highlighter-rouge\">heading-bg-size</code></dt>\n  <dd>Background size, default value is <code class=\"highlighter-rouge\">cover</code>.</dd>\n  <dt><code class=\"highlighter-rouge\">heading-bg-position</code></dt>\n  <dd>Background position, default value is <code class=\"highlighter-rouge\">center center</code>.</dd>\n  <dt><code class=\"highlighter-rouge\">heading-bg-repeat</code></dt>\n  <dd>Background repeat, default value is <code class=\"highlighter-rouge\">no-repeat</code>.</dd>\n  <dt><code class=\"highlighter-rouge\">heading-bg-text</code></dt>\n  <dd>Text color in heading, set it based on your background image.</dd>\n</dl>\n\n<blockquote>\n  <p>Heading image copyright info:\n© 士郎正宗・Production I.G／講談社・「攻殻機動隊」製作委員会</p>\n</blockquote>","excerpt":"This is an example of custom heading background. You can simply add the following setting to your post front-matter field:","languages":null,"categories":["old","note"],"tags":["curtana"]},{"title":"GitHub Pages Setup Guide","permalink":"//github-pages-setup.html","link":"//github-pages-setup.html","date":"2014-01-01T00:00:00-08:00","modified":"2019-06-19T10:48:20-07:00","author":{"name":"Saarthak Sarup","url":"https://github.com/saarthaks","email":"ssarup@stanford.edu"},"content":"<h2 id=\"the-problem\">The Problem</h2>\n\n<p>In short answer: yes, but additional actions required.</p>\n\n<p>tl;dr: You can serve AMSF as a static site on GitHub Pages, but not a Jekyll site using Jekyll renderer provided by GitHub Pages.</p>\n\n<p>There’re some factors that prevent it from generating pages using GitHub Pages renderer:</p>\n\n<ul>\n  <li>Many features Almace Scaffolding provides like LiveReload, Sass support, inline SVG, and HTML minification are implemented using <a href=\"https://gruntjs.com/\">Grunt.js</a>, it’s not supported by GitHub Pages.</li>\n  <li>Almace Scaffolding uses the latest pre-release Jekyll, so not all features are supported by GitHub Pages renderers.</li>\n  <li>GItHub Pages build server <a href=\"https://help.github.com/articles/pages-don-t-build-unable-to-run-jekyll#source-setting\">overwrites the <code class=\"highlighter-rouge\">source</code> settings</a>. This prevent it generating pages from current file structure.</li>\n</ul>\n\n<h2 id=\"the-solution-for-users-or-organization-sites\">The Solution for Users or Organization Sites</h2>\n\n<p>Since GitHub Pages for users or organization sites can only be served from the root directoy of your master branch. You have to:</p>\n\n<ul>\n  <li>Make sure your <code class=\"highlighter-rouge\">baseurl</code> is set to <code class=\"highlighter-rouge\">\"\"</code> (empty) in your <code class=\"highlighter-rouge\">_config.yml</code>.</li>\n  <li>Build your site locally (<code class=\"highlighter-rouge\">grunt build</code>).</li>\n  <li>Use your own method, create a script, bash, whatever it works to move the generated pages to the root directory of your repository.</li>\n  <li>Upload Jekyll generated static files to your <code class=\"highlighter-rouge\">username.github.io</code> repository.</li>\n</ul>\n\n<p>If you’d like to keep all things under Git control, you can try the following file structure:</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── _amsf/ (Almace Scaffolding source code)\n├── *.html (Jekyll-generated static pages)\n└── README.md (your own readme)\n</code></pre></div></div>\n\n<p>You can see this <a href=\"https://github.com/amsf/amsf.github.io/\">live demo</a> how it actually works.</p>\n\n<h2 id=\"the-solution-for-project-sites\">The Solution for Project Sites</h2>\n\n<p>Things can be simpler if you need AMSF for your project sites since GitHub Pages supports serve your site from a subdirectory:</p>\n\n<ul>\n  <li>Make the following changes in your <code class=\"highlighter-rouge\">_config.yml</code>:\n    <ul>\n      <li>Change <code class=\"highlighter-rouge\">destination</code> to <code class=\"highlighter-rouge\">docs</code></li>\n      <li>Change <code class=\"highlighter-rouge\">baseurl</code> to the name of your repository slug, ie. <code class=\"highlighter-rouge\">/my-project</code>.</li>\n      <li>Change <code class=\"highlighter-rouge\">flatten_base</code> to <code class=\"highlighter-rouge\">true</code>.</li>\n    </ul>\n  </li>\n  <li>Build your site locally (<code class=\"highlighter-rouge\">grunt build</code>).</li>\n  <li>Push changes to GitHub</li>\n</ul>","excerpt":"The Problem","languages":null,"categories":["old","note"],"tags":["deployment"]}]